% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chopRY.R
\name{stack_chopped_ECCs}
\alias{stack_chopped_ECCs}
\title{Stack chopped ECC data frames}
\usage{
stack_chopped_ECCs(
  psut,
  chop_R = NULL,
  chop_Y = NULL,
  chopped_mat = PFUAggDatabase::aggregation_df_cols$chopped_mat,
  chopped_var = PFUAggDatabase::aggregation_df_cols$chopped_var,
  Y_matname = Recca::psut_cols$Y,
  R_matname = Recca::psut_cols$R,
  product_sector = PFUAggDatabase::aggregation_df_cols$product_sector,
  none = "None"
)
}
\arguments{
\item{psut, chop_Y, chop_R}{Data frames to be stacked.}

\item{chopped_mat, chopped_var}{Names of columns that tell the matrix that has been chopped (\code{chop_mat}) and
the column that contains the the row or column name used for this chop.}

\item{R_matname, Y_matname}{The names of \strong{R} and \strong{Y} matrices to be added to the \code{chopped_var} column of the data frame.
Defaults are taken from \code{Recca::psut_cols}.}

\item{product_sector}{The name of the data frame column that contains the variable that has been chopped.}

\item{none}{The string for no chopping. Used with \code{PSUT_Re_all_Gr_all}.}
}
\value{
A row-bound version of \code{PSUT_Re_all_Gr_all}, \code{PSUT_Re_all_Gr_all_Chop_Y}, and \code{PSUT_Re_all_Gr_all_Chop_R}.
}
\description{
This function stacks chopped data frames with \code{dplyr::bind_rows()}.
}
