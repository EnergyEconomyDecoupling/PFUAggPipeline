[{"path":[]},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement matthew.heun@.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to PFUAggDatabase","title":"Contributing to PFUAggDatabase","text":"document outlines propose change PFUAggDatabase package.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to PFUAggDatabase","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to PFUAggDatabase","text":"want make change bigger fixing typos, first file issue GitHub make sure someone team agrees proposed change needed. ’ve found bug, please file issue illustrates bug minimal reprex.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to PFUAggDatabase","text":"Fork package clone onto computer. Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(). Follow prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e., beneath “always resolves latest release.”).","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to PFUAggDatabase","text":"New code written style matches rest code PFUAggDatabase. use roxygen2, Markdown syntax, documentation.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CONTRIBUTING.html","id":"tests","dir":"","previous_headings":"Bigger changes","what":"Tests","title":"Contributing to PFUAggDatabase","text":"use testthat unit tests. maintain 100% test coverage. Contributions reduce test coverage less 100% rejected.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to PFUAggDatabase","text":"Please note RCLabels project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/CONTRIBUTING.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributing to PFUAggDatabase","text":"guide contributing adapted Contributing guide usethis package.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 PFUAggDatabase authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/access_via_pins.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Access PFU Database Products Via `Pins`","text":"vignette demonstrates use pins package access products PFU database.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/access_via_pins.html","id":"preparation","dir":"Articles","previous_headings":"","what":"Preparation","title":"Access PFU Database Products Via `Pins`","text":"Take following steps prepare accessing PFU Database products.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/access_via_pins.html","id":"obtain-access-to-iea-eweb-data","dir":"Articles","previous_headings":"Preparation","what":"(1) Obtain Access to IEA EWEB Data","title":"Access PFU Database Products Via `Pins`","text":"PFU database contains Extended World Energy Balance (EWEB) data. use PFU Database, institution must already purchased EWEB data, obtained license use EWEB data, subscribed data service access EWEB data. present, must access countries years EWEB data access PFU Database.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/access_via_pins.html","id":"install-dropbox","dir":"Articles","previous_headings":"Preparation","what":"(2) Install Dropbox","title":"Access PFU Database Products Via `Pins`","text":"present, PFU Database distributed via shared Dropbox folder; thus, users database must install Dropbox. present (May 2023), data Dropbox folder 12 GB. database grow size future. may need upgrade Dropbox plan amount data cause exceed current storage limit.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/access_via_pins.html","id":"receive-and-accept-an-invitation","dir":"Articles","previous_headings":"Preparation","what":"(3) Receive and accept an invitation","title":"Access PFU Database Products Via `Pins`","text":"member PFU Database team provide read-access Dropbox folder PFU Database products stored. Accept invitation let Dropbox sync PFU Database folder computer. folder containing PFU Database products called PipelineReleases.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/access_via_pins.html","id":"become-familiar-with-the-pins-package","dir":"Articles","previous_headings":"Preparation","what":"(4) Become familiar with the pins package","title":"Access PFU Database Products Via `Pins`","text":"pins package mechanism versions PFU Database products stored, maintained, distributed. Please review pins package accessing PFU database data.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/access_via_pins.html","id":"become-familiar-with-the-pfu-database-and-products","dir":"Articles","previous_headings":"Preparation","what":"(5) Become familiar with the PFU Database and products","title":"Access PFU Database Products Via `Pins`","text":"Strictly speaking, PFU Database consists primary, final, useful energy exergy data countries years available IEA EWEB data. data arranged Physical Supply Use Table (PSUT) format described paper Heun et al. entitled “physical supply-use table framework energy analysis energy conversion chain.” data stored Dropbox folder .rds files matsindf format. addition database , several data products available, aggregations, subsets, calculations made database. example, primary, final, useful energy exergy aggregations available country year (data product C). Primary--final, final--useful, primary--final efficiencies also available country year (data product D). database, versions, data products documented file named versions products.xlsx top level PipelineReleases folder. Look file determine PFU Database products needed research. particular, note “Pin name” “Pin version” data products desire. Note: may versions pins Dropbox folder. Ignore versions pins except identified versions products.xlsx file.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/access_via_pins.html","id":"accessing-the-pfu-database-and-other-data-products","dir":"Articles","previous_headings":"","what":"Accessing the PFU Database and other data products","title":"Access PFU Database Products Via `Pins`","text":"load PFU Database R session, supply pin name pin version pins functions. following code loads v1 database , using name pin (“psut”) version string version 1 database (“20221109T152414Z-7d7ad”). database contains large amount data, may take minute two load. Although recommend , may load latest version pin specifying version string. procedure load data product database. example, data product subset database contains “USA” . Product may useful testing, much smaller memory full database loads much faster. load product version 1 database, use following code. select single country data, use following code.","code":"library(pins) pfu_pinboard <- pins::board_folder(path = \"~/Dropbox/PipelineReleases\", versioned = TRUE) psut_data_frame <- pins::pin_read(board = pfu_pinboard, name = \"psut\",                                    version = \"20221109T152414Z-7d7ad\") psut_data_frame_latest <- pins::pin_read(board = pfu_pinboard, name = \"psut\") psut_data_frame_usa <- pins::pin_read(board = pfu_pinboard, name = \"psut_usa\",                                        version = \"20230217T182459Z-287a0\") col_only <- psut_data_frame |>    dplyr::filter(Country == \"COL\")"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/access_via_pins.html","id":"questions","dir":"Articles","previous_headings":"","what":"Questions","title":"Access PFU Database Products Via `Pins`","text":"Please reach member PFU Database team questions.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/efficiency_graph_example.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Efficiency graph example","text":"MR-PFU Database contains primary, final, useful energy exergy data countries covered International Energy Agency (IEA). Aggregations also available. can challenge get started MR-PFU Database unfamiliar types R programming. vignette provides detailed example working MR-PFU Database information help users get hurdle. particular, vignette shows create graph country-level energy exergy efficiencies first presented International Exergy Economics Workshop July 2023 (IEEW2023) Matthew Kuperus Heun (Calvin University). process, important concepts accessing working data demonstrated, including creating pinboard, reading efficiency data, preparing data, including filtering, creating initial version graph, refining graph presentation. R programs use packages loaded beginning session. following packages used vignette. packages available Comprehensive R Archive Network (CRAN), except MKHthemes PFUSetup. Instructions loading MKHthemes PFUSetup given .","code":"library(devtools) library(dplyr) library(ggplot2) library(MKHthemes) library(PFUSetup) library(pins) library(readxl) library(tidyr)"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/efficiency_graph_example.html","id":"create-the-pinboard","dir":"Articles","previous_headings":"","what":"Create the pinboard","title":"Efficiency graph example","text":"first step establish “pinboard” pins package. Someone MR-PFU Database team shared “PipelineReleases” folder access IEA data. PFUSetup package helpful find correct folder. Install PFUSetup package following code. Create pinboard correct Dropbox folder. pinboard_folder might different example, due different location computer.","code":"devtools::install_github(\"EnergyEconomyDecoupling/PFUSetup\") pinboard_folder <- PFUSetup::get_abs_paths()[[\"pipeline_releases_folder\"]] pinboard_folder #> [1] \"/Users/mkh2/Dropbox/Fellowship 1960-2015 PFU database/OutputData/PipelineReleases\" pinboard <- pins::board_folder(pinboard_folder, versioned = TRUE) pinboard #> Pin board <pins_board_folder> #> Path: '/Users/mkh2/Dropbox/Fellowship 1960-2015 PFU #> database/OutputData/PipelineReleases' #> Cache size: 0"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/efficiency_graph_example.html","id":"read-efficiency-data","dir":"Articles","previous_headings":"","what":"Read efficiency data","title":"Efficiency graph example","text":"Next, users can consult versions products.xlsx file located “PipelineReleases” folder. find desired database product. example, want data pf, fu, pu efficiencies, can found Product E, whose pin named “agg_eta_pfu”. “versions products.xlsx” file indicates pin version “agg_eta_pfu” product database v1.1 “20230619T051304Z-f653c”. Putting together, following code reads desired version desired data v1.1 PFU database. agg_eta_pfu_data R data frame shown : columns following meanings: “Country” contains 3-letter country abbreviations. “Method” contains “PCM”, indicating “physical content method” used data. “Energy.type” contains either “E” (energy) “X” (exergy). “Year” 1960 2020, inclusive. “IEAMW” contains one “IEA” (IEA data), “MW” (muscle work), “” (IEA muscle work data). “Chopped.mat” “Chopped.var” reserved future use database. object, always “None.” “Product.aggregation” “Industry.aggregation” tell energy carriers industries aggregated aggregated prior summing primary, final, useful energy stages. example, primary, final, useful aggregations , regardless value “Product.aggregation” “Industry.aggregation.” “GrossNet” contains either “Gross” “Net” telling whether energy industry use included final useful aggregations. “EX.p”, “EX.f”, “EX.u” contain primary, final, useful stage energy exergy aggregations. Finally, come columns interest graph. columns names “eta_pf”, “eta_fu”, “eta_pu” contain primary--final, final--useful, primary--useful efficiencies.","code":"agg_eta_pfu_data <- pins::pin_read(board = pinboard,                                    name = \"agg_eta_pfu\",                                    version = \"20230619T051304Z-f653c\") agg_eta_pfu_data #> # A tibble: 473,140 × 16 #>    Country Method Energy.type  Year IEAMW Chopped.mat Chopped.var #>    <chr>   <chr>  <chr>       <dbl> <chr> <chr>       <chr>       #>  1 AGO     PCM    E            1971 IEA   None        None        #>  2 AGO     PCM    E            1971 IEA   None        None        #>  3 AGO     PCM    X            1971 IEA   None        None        #>  4 AGO     PCM    X            1971 IEA   None        None        #>  5 AGO     PCM    E            1971 MW    None        None        #>  6 AGO     PCM    E            1971 MW    None        None        #>  7 AGO     PCM    X            1971 MW    None        None        #>  8 AGO     PCM    X            1971 MW    None        None        #>  9 AGO     PCM    E            1971 Both  None        None        #> 10 AGO     PCM    E            1971 Both  None        None        #> # ℹ 473,130 more rows #> # ℹ 9 more variables: Product.aggregation <chr>, Industry.aggregation <chr>, #> #   GrossNet <chr>, EX.p <dbl>, EX.f <dbl>, EX.u <dbl>, eta_pf <dbl>, #> #   eta_fu <dbl>, eta_pu <dbl>"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/efficiency_graph_example.html","id":"prepare-the-data-including-filtering","dir":"Articles","previous_headings":"","what":"Prepare the data, including filtering","title":"Efficiency graph example","text":"code , prepare data filtering rows selecting columns agg_eta_pfu_data data frame focus data interest graph. Comments code narrate process.","code":"agg_eta_pfu_prepared <- agg_eta_pfu_data |>    # Select only those rows where we have both IEA and MW data,    # where gross energy production is provided, and   # where aggregations were calculated from fully specified data.   dplyr::filter(IEAMW == \"Both\",                 GrossNet == \"Gross\",                  Product.aggregation == \"Specified\",                 Industry.aggregation == \"Specified\") |>    # Select only the columns of interest to us   dplyr::select(Country, Energy.type, Year, eta_pf, eta_fu, eta_pu) |>    # Pivot the data to create a value column   tidyr::pivot_longer(cols = c(eta_pf, eta_fu, eta_pu),                       names_to = \"Var.name\",                       values_to = \"Value\") # Here is the prepared data agg_eta_pfu_prepared #> # A tibble: 48,018 × 5 #>    Country Energy.type  Year Var.name  Value #>    <chr>   <chr>       <dbl> <chr>     <dbl> #>  1 AGO     E            1971 eta_pf   0.713  #>  2 AGO     E            1971 eta_fu   0.238  #>  3 AGO     E            1971 eta_pu   0.170  #>  4 AGO     X            1971 eta_pf   0.715  #>  5 AGO     X            1971 eta_fu   0.0756 #>  6 AGO     X            1971 eta_pu   0.0541 #>  7 AGO     E            1972 eta_pf   0.729  #>  8 AGO     E            1972 eta_fu   0.240  #>  9 AGO     E            1972 eta_pu   0.175  #> 10 AGO     X            1972 eta_pf   0.731  #> # ℹ 48,008 more rows"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/efficiency_graph_example.html","id":"create-an-initial-version-of-graph","dir":"Articles","previous_headings":"","what":"Create an initial version of graph","title":"Efficiency graph example","text":"agg_eta_pfu_prepared data frame contains everything need make graph. use ggplot2 package make graph.","code":"agg_eta_pfu_prepared |>    # Set the x and y axes   ggplot2::ggplot(mapping = ggplot2::aes(x = Year,                                          y = Value,                                          # Group by Country                                           # to make individual lines                                          # for each country                                          group = Country)) +   # Create a line graph   ggplot2::geom_line() +   # Put mini-graphs for energy type in rows and efficiency type in columns   ggplot2::facet_grid(rows = ggplot2::vars(Energy.type),                       cols = ggplot2::vars(Var.name))"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/efficiency_graph_example.html","id":"refine-the-graph-with-colors-and-other-details","dir":"Articles","previous_headings":"","what":"Refine the graph with colors and other details","title":"Efficiency graph example","text":"initial version graph provides confidence can use data, attractive. Line widths reduced can see individual countries instead undifferentiated mass lines countries. Lines coloured continent. world average line added distinguished lines. column labels (“eta_pf”, “eta_fu”, “eta_pu”) changed Greek letters subscripts (\\(\\eta_{pf}\\), \\(\\eta_{fu}\\), \\(\\eta_{pu}\\)). left--right order efficiencies changed “eta_pf”, “eta_fu”, “eta_pu”. “E” “X” rows graph changed “Energy” “Exergy” clarity. Change “Asia_” “Asia” “Country” “Continent” column (added later). word “Value” \\(y\\)-axis changed symbol efficiency (\\(\\eta\\)). need word “Year” \\(x\\)-axis. Everyone knows years. year labels run . gray background ugly. Many changes made adjusting values metadata columns agg_eta_pfu_prepared data frame. code shows adjustments. improve appearance, can colour individual country lines continent. , can highlight world thick line atop countries. first step join continent information efficiency data, thereby making continent data available graph. can load data frame countries continents join efficiency data frame. Establish continent colors. create specific World-average line, need separate World data countries. Also, continent averages removed data frame contains country lines. use MKHthemes package make nice-looking graphs white background tick marks point inward, outward. MKHthemes can loaded following code. Now make graph. Details different previous version identified comments.  new version graph aesthetically pleasing conveys information initial attempt.","code":"agg_eta_pfu_nice <- agg_eta_pfu_prepared |>    dplyr::mutate(     # We use the string \"Asia_\" to indicate     # our aggregation for Asia.     # Change to \"Asia\" (without the trailing \"_\").     Country = dplyr::case_when(       Country == \"Asia_\" ~ \"Asia\",       TRUE ~ Country     ),     # Change \"E\" and \"X\" to \"Energy\" and \"Exergy\"     Energy.type = dplyr::case_match(       Energy.type,       \"E\" ~ \"Energy\",       \"X\" ~ \"Exergy\"     ),     Var.name = dplyr::case_match(       Var.name,       # Change names of efficiencies       # for later subscripts of \"pf\", \"fu\", and \"pu\"       \"eta_pf\" ~ \"eta[pf]\",       \"eta_fu\" ~ \"eta[fu]\",       \"eta_pu\" ~ \"eta[pu]\"     ),     # Set ordering for efficiency variables     # so they look nice in our graph     Var.name = factor(Var.name, levels = c(\"eta[pf]\", \"eta[fu]\", \"eta[pu]\"))   ) # The continents file is an input  # to the calculation pipeline  # that created the database. # Users can create their own  # continent mapping data frame # or ask for ours. continents_file <- PFUSetup::get_abs_paths()[[\"aggregation_mapping_path\"]] continents_file #> [1] \"/Users/mkh2/Dropbox/Fellowship 1960-2015 PFU database/InputData/v1.2/aggregation_mapping.xlsx\" continents_agg_map <- continents_file |>   # Read the continent_aggregation tab of the Excel file   readxl::read_excel(sheet = \"continent_aggregation\") |>   # Adjust the column names   dplyr::rename(     Country = Many,     Continent = Few   ) |>   dplyr::mutate(     # Fix \"Asia_\" --> \"Asia\"     # to match the efficiency data frame.     Continent = dplyr::case_when(       Continent == \"Asia_\" ~ \"Asia\",       TRUE ~ Continent     )   ) continents_agg_map #> # A tibble: 158 × 2 #>    Country Continent #>    <chr>   <chr>     #>  1 AGO     Africa    #>  2 ALB     Europe    #>  3 ARE     MidEast   #>  4 ARG     SoCeAmr   #>  5 ARM     Asia      #>  6 AUS     Oceania   #>  7 AUT     Europe    #>  8 AZE     Asia      #>  9 BEL     Europe    #> 10 BEN     Africa    #> # ℹ 148 more rows # Join to the efficiency data agg_eta_pfu_with_continents <- agg_eta_pfu_nice |>   dplyr::left_join(continents_agg_map, by = \"Country\") # Notice the Continent column agg_eta_pfu_with_continents #> # A tibble: 48,018 × 6 #>    Country Energy.type  Year Var.name  Value Continent #>    <chr>   <chr>       <dbl> <fct>     <dbl> <chr>     #>  1 AGO     Energy       1971 eta[pf]  0.713  Africa    #>  2 AGO     Energy       1971 eta[fu]  0.238  Africa    #>  3 AGO     Energy       1971 eta[pu]  0.170  Africa    #>  4 AGO     Exergy       1971 eta[pf]  0.715  Africa    #>  5 AGO     Exergy       1971 eta[fu]  0.0756 Africa    #>  6 AGO     Exergy       1971 eta[pu]  0.0541 Africa    #>  7 AGO     Energy       1972 eta[pf]  0.729  Africa    #>  8 AGO     Energy       1972 eta[fu]  0.240  Africa    #>  9 AGO     Energy       1972 eta[pu]  0.175  Africa    #> 10 AGO     Exergy       1972 eta[pf]  0.731  Africa    #> # ℹ 48,008 more rows continent_colours <- c(Africa = \"orange\", Asia = \"gray\",                        Bunkers = \"darkgray\", Europe = \"darkgreen\",                        MidEast = \"cadetblue3\",                        NoAmr = \"red\",                        Oceania = \"blue\", SoCeAmr = \"violet\",                        World = \"black\") # Create a data frame of only World information # for years >- 1971  # (the first year when all countries are in IEA data). # This data frame will be used to create the  # World-average line agg_eta_pfu_world <- agg_eta_pfu_with_continents |>    dplyr::filter(Country == \"World\", Year >= 1971) # Create a data frame of countries only,  # eliminating continent and world averages agg_eta_pfu_countries <- agg_eta_pfu_with_continents |>    dplyr::filter(!(Country %in% c(\"Africa\", \"Asia\", \"Bunkers\", \"Europe\",                                   \"MidEast\", \"NoAmr\", \"Oceania\", \"SoCeAmr\",                                   \"World\", \"WRLD\"))) devtools::install_github(\"MatthewHeun/MKHthemes\") ggplot2::ggplot(mapping = ggplot2::aes(x = Year,                                        y = Value,                                        group = Country,                                         # Set country colours by continent                                        colour = Continent)) +   # Create two different line layers.   # The first has countries only and a narrow linewidth.   ggplot2::geom_line(data = agg_eta_pfu_countries,                      linewidth = 0.05) +   # The second (upper) layer has World only,    # a larger linewidth and black colour.   ggplot2::geom_line(data = agg_eta_pfu_world,                       linewidth = 1,                       colour = \"black\") +   # Set only a few years on the x-axis so the labels   # don't collide   ggplot2::scale_x_continuous(breaks = c(1980, 2000, 2020)) +   # Use the continent_colours for the lines   ggplot2::scale_colour_manual(values = continent_colours) +   # Eliminate the x-axis label (\"Year\");    # everyone knows those are years.   # Eliminate the colour label, \"Continent\";   # everyone knows these are continent names.   ggplot2::labs(x = NULL,                 y = expression(eta),                  colour = NULL) +   ggplot2::facet_grid(rows = ggplot2::vars(Energy.type),                       cols = ggplot2::vars(Var.name),                       labeller = ggplot2::label_parsed) +   # Set pleasant aesthetics such as white background,    # gray border lines, and    # inward-pointing tick marks.   MKHthemes::xy_theme() +   ggplot2::guides(     colour = ggplot2::guide_legend(       # Adjust the size of the line segments in the legend       # independent from linewidths in the graph itself       override.aes = list(linewidth = 1)     )   )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/articles/efficiency_graph_example.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Efficiency graph example","text":"PFU Database provides data make graphs primary--final, final--useful, primary--useful efficiencies. vignette shows details read clean data, make graphs, modify graphs aesthetically pleasing.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Heun. Author, maintainer.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Matthew Kuperus Heun (2023). PFUAggDatabase: Calculate Aggregations Efficiencies Energy Conversion Chains PSUT Format R package version 0.1.6. https://doi.org/10.5281/zenodo.6409759","code":"@Manual{,   title = {PFUAggDatabase: Calculate Aggregations and Efficiencies For Energy Conversion Chains in PSUT Format},   author = {Matthew Kuperus Heun},   year = {2023},   note = {R package version 0.1.6},   url = {https://doi.org/10.5281/zenodo.6409759}, }"},{"path":[]},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/index.html","id":"statement-of-need","dir":"","previous_headings":"","what":"Statement of need","title":"Calculate Aggregations and Efficiencies For Energy Conversion Chains in PSUT Format","text":"CL-PFU database uses many sources input data spanning hundreds data files. targets pipeline PFUPipeline package creates RUVY matrices PSUT framework matsindf format, containing descriptions energy conversion chains (ECCs) energy exergy terms. ECCs can used input data create many aggregated versions ECCs, amenable presentation efficiency calculations. Computational tools aggregate calculate efficiencies needed. package (PFUAggPipeline) creates another targets computational pipeline, one aggregates calculates efficiencies results PFUPipeline package. targets computational pipeline provides helpful dependency management done stays done debugging.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Aggregations and Efficiencies For Energy Conversion Chains in PSUT Format","text":"can install development version PFUAggPipeline GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"EnergyEconomyDecoupling/PFUAggPipeline\")"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Calculate Aggregations and Efficiencies For Energy Conversion Chains in PSUT Format","text":"RStudio console, type","code":"library(targets)              # to load the targets package    tar_visnetwork()              # to see a directed acyclic graph of the calculations that will take place    tar_make_future(workers = 2)  # to execute the calculations (or `workers = 8`, if you have enough cores)"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/index.html","id":"accessing-targets","dir":"","previous_headings":"","what":"Accessing targets","title":"Calculate Aggregations and Efficiencies For Energy Conversion Chains in PSUT Format","text":"targets::tar_read(<<target>>) pulls value target targets cache. (<<target>> unquoted symbol Specified.)","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/index.html","id":"fresh-start","dir":"","previous_headings":"","what":"Fresh start","title":"Calculate Aggregations and Efficiencies For Energy Conversion Chains in PSUT Format","text":"targets::tar_destroy() invalidates targets cache forces reanalysis everything. Reanalyzing everything may take .","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calculate Aggregations and Efficiencies For Energy Conversion Chains in PSUT Format","text":"See vignette entitled “Access PFU Database Products Via Pins”.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/index.html","id":"more-information","dir":"","previous_headings":"","what":"More Information","title":"Calculate Aggregations and Efficiencies For Energy Conversion Chains in PSUT Format","text":"information targets package, see targets manual. documentation PFUAggPipeline package, see https://EnergyEconomyDecoupling.github.io/PFUAggPipeline/.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/agg_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation metadata — agg_metadata","title":"Aggregation metadata — agg_metadata","text":"string list containing aggregation metadata.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/agg_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation metadata — agg_metadata","text":"","code":"agg_metadata"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/agg_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aggregation metadata — agg_metadata","text":"string list 6 entries. total_value string indicating aggregation totals. \"Total\". all_value string indicating something aggregated. \"\". product_value string indicating products aggregated. \"Product\". sector_value string indicating sectors aggregated. \"Sector\". flow_value string indicating flows aggregated. \"Flow\". none string indicating aggregations present. \"None\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/agg_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation metadata — agg_metadata","text":"","code":"agg_metadata #> $total_value #> [1] \"Total\" #>  #> $all_value #> [1] \"All\" #>  #> $product_value #> [1] \"Product\" #>  #> $sector_value #> [1] \"Sector\" #>  #> $flow_value #> [1] \"Flow\" #>  #> $none #> [1] \"None\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_df_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"PFUAggDatabase data frame column names — aggregation_df_cols","title":"PFUAggDatabase data frame column names — aggregation_df_cols","text":"Aggregation data frame column names","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_df_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PFUAggDatabase data frame column names — aggregation_df_cols","text":"","code":"aggregation_df_cols"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_df_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PFUAggDatabase data frame column names — aggregation_df_cols","text":"string list 9 entries. product_aggregation name metadata column tells product aggregation. \"Product.Aggregation\" industry_aggregation name metadata column tells industry aggregation. \"Industry.Aggregation\" specified value indicates products industries remain specified. \"Specified\" despecified value indicates products industries despecified aggregated. \"Despecified\" ungrouped value indicates products industries grouped. \"Ungrouped\" grouped value indicates products industries grouped. \"Grouped\" chopped_mat value indicates matrix chopped. \"Chopped.Mat\" chopped_var value indicates chopping product industry. \"Chop.Var\" product_sector column containing values chopped_var. Recca::aggregate_cols$product_sector.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_df_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PFUAggDatabase data frame column names — aggregation_df_cols","text":"string list containing names column names values aggregation data frames.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_df_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PFUAggDatabase data frame column names — aggregation_df_cols","text":"","code":"aggregation_df_cols #> $product_aggregation #> [1] \"Product.aggregation\" #>  #> $industry_aggregation #> [1] \"Industry.aggregation\" #>  #> $specified #> [1] \"Specified\" #>  #> $despecified #> [1] \"Despecified\" #>  #> $ungrouped #> [1] \"Ungrouped\" #>  #> $grouped #> [1] \"Grouped\" #>  #> $chopped_mat #> [1] \"Chopped.mat\" #>  #> $chopped_var #> [1] \"Chopped.var\" #>  #> $product_sector #> [1] \"Product.Industry.Sector\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_file_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation file column names — aggregation_file_cols","title":"Aggregation file column names — aggregation_file_cols","text":"string list containing aggregation file column names.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_file_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation file column names — aggregation_file_cols","text":"","code":"aggregation_file_cols"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_file_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aggregation file column names — aggregation_file_cols","text":"string list 2 entries. many_colname string name many column. \"Many\". few_colname string name column. \"\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_file_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation file column names — aggregation_file_cols","text":"","code":"aggregation_file_cols #> $many_colname #> [1] \"Many\" #>  #> $few_colname #> [1] \"Few\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_file_tab_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation file tab information — aggregation_file_tab_names","title":"Aggregation file tab information — aggregation_file_tab_names","text":"string list containing aggregation file's tab names.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_file_tab_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation file tab information — aggregation_file_tab_names","text":"","code":"aggregation_file_tab_names"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_file_tab_names.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aggregation file tab information — aggregation_file_tab_names","text":"string list 6 entries. region_aggregation name region aggregation tab, \"region_aggregation\". continent_aggregation name continent aggregation tab, \"continent_aggregation\". world_aggregation string name world aggregation tab. \"world_aggregation\". ef_product_aggregation string name final energy product aggregation tab. \"ef_product_aggregation\". eu_product_aggregation string name useful energy product aggregation tab. \"eu_product_aggregation\". ef_sector_aggregation string name final energy sector aggregation tab. \"ef_sector_aggregation\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/aggregation_file_tab_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation file tab information — aggregation_file_tab_names","text":"","code":"aggregation_file_tab_names #> $region_aggregation #> [1] \"region_aggregation\" #>  #> $continent_aggregation #> [1] \"continent_aggregation\" #>  #> $world_aggregation #> [1] \"world_aggregation\" #>  #> $ef_product_aggregation #> [1] \"ef_product_aggregation\" #>  #> $eu_product_aggregation #> [1] \"eu_product_aggregation\" #>  #> $ef_sector_aggregation #> [1] \"ef_sector_aggregation\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calc_agg_etas.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate efficiencies from an aggregates data frame — calc_agg_etas","title":"Calculate efficiencies from an aggregates data frame — calc_agg_etas","text":"function calculates efficiencies (etas) aggregates data frame. Aggregate energy exergy retained.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calc_agg_etas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate efficiencies from an aggregates data frame — calc_agg_etas","text":"","code":"calc_agg_etas(   .aggregates,   stage_colname = PFUAggDatabase::sea_cols$stage_colname,   ex_colname = PFUAggDatabase::sea_cols$ex_colname,   agg_by_colname = PFUAggDatabase::sea_cols$agg_by_colname,   e_product_colname = PFUAggDatabase::sea_cols$e_product_colname,   gross_net_colname = PFUAggDatabase::sea_cols$gross_net_colname,   sector_colname = PFUAggDatabase::sea_cols$sector_colname,   eta_pf_colname = PFUAggDatabase::efficiency_cols$eta_pf,   eta_fu_colname = PFUAggDatabase::efficiency_cols$eta_fu,   eta_pu_colname = PFUAggDatabase::efficiency_cols$eta_pu,   gross = PFUAggDatabase::gross_net_metadata$gross,   net = PFUAggDatabase::gross_net_metadata$net,   total_value = PFUAggDatabase::agg_metadata$total_value,   primary = IEATools::all_stages$primary,   final = IEATools::all_stages$final,   useful = IEATools::all_stages$useful,   country = IEATools::iea_cols$country,   year = IEATools::iea_cols$year,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   flow = IEATools::iea_cols$flow,   tar_group = \"tar_group\" )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calc_agg_etas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate efficiencies from an aggregates data frame — calc_agg_etas","text":".aggregates data frame efficiencies calculated. data frame output PSUT_Re_all_St_pfu PSUT_Re_all_St_pfu_by_country targets. stage_colname, ex_colname, agg_by_colname, e_product_colname, gross_net_colname, sector_colname See PFUAggDatabase::sea_cols. eta_pf_colname, eta_fu_colname, eta_pu_colname See PFUAggDatabase::efficiency_cols. gross, net See PFUAggDatabase::gross_net_metadata total_value See PFUAggDatabase::agg_metadata. primary, final, useful, country, year, method, energy_type, flow See IEATools::iea_cols. tar_group name targets grouping column .aggregates. column deleted output.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calc_agg_etas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate efficiencies from an aggregates data frame — calc_agg_etas","text":"data frame aggregates aggregate efficiencies.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calc_agg_etas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate efficiencies from an aggregates data frame — calc_agg_etas","text":"function removes tar_group column.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_finaldemand_aggregates.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate final demand aggregates for PSUT data — calculate_finaldemand_aggregates","title":"Calculate final demand aggregates for PSUT data — calculate_finaldemand_aggregates","text":"function routes Recca::finaldemand_aggregates().","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_finaldemand_aggregates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate final demand aggregates for PSUT data — calculate_finaldemand_aggregates","text":"","code":"calculate_finaldemand_aggregates(   .psut_data,   countries,   years,   fd_sectors,   piece = \"noun\",   notation = list(RCLabels::bracket_notation, RCLabels::arrow_notation),   pattern_type = \"exact\",   prepositions = RCLabels::prepositions_list )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_finaldemand_aggregates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate final demand aggregates for PSUT data — calculate_finaldemand_aggregates","text":".psut_data data final demand aggregates calculated. countries countries final demand aggregates calculated. years years final demand aggregates calculated. fd_sectors string vector sectors count \"final demand\". piece piece aggregated. Default \"noun\". notation assumed notation labels. Default list(RCLabels::bracket_notation, RCLabels::arrow_notation). pattern_type type matching used final demand sectors names. Default \"leading\". prepositions expected propositions row column labels. Default RCLabels::prepositions_list.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_finaldemand_aggregates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate final demand aggregates for PSUT data — calculate_finaldemand_aggregates","text":"version .psut_data additional column final demand aggregate data.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_finaluseful_ex_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame containing final and useful aggregate energy/exergy data — calculate_finaluseful_ex_data","title":"Create a data frame containing final and useful aggregate energy/exergy data — calculate_finaluseful_ex_data","text":"functions creates single data frame containing final useful energy/exergy country, year, method, energy quantification, grouping variable (Total, Product, Sector) using functions: calculate_fu_ex_total, calculate_fu_ex_sector, calculate_fu_ex_product binding outputs functions single data frame.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_finaluseful_ex_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame containing final and useful aggregate energy/exergy data — calculate_finaluseful_ex_data","text":"","code":"calculate_finaluseful_ex_data(.sutdata, fd_sectors)"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_finaluseful_ex_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data frame containing final and useful aggregate energy/exergy data — calculate_finaluseful_ex_data","text":".sutdata data frame containing Physical Supply-Use Table (PSUT) matrices associated final demand sector names fd_sectors character vector final demand sectors.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_finaluseful_ex_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data frame containing final and useful aggregate energy/exergy data — calculate_finaluseful_ex_data","text":"data frame containing final useful energy/exergy values aggregated total, sector product.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_finaluseful_ex_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data frame containing final and useful aggregate energy/exergy data — calculate_finaluseful_ex_data","text":"","code":"library(Recca) #>  #> Attaching package: ‘Recca’ #> The following object is masked from ‘package:PFUAggDatabase’: #>  #>     efficiency_cols finaluseful_data <- Recca::UKEnergy2000mats %>%   tidyr::pivot_wider(names_from = matrix.name,                      values_from = matrix) %>%   dplyr::mutate(Method = \"PCM\") %>%   calculate_finaluseful_ex_data(fd_sectors = c(\"Residential\"))"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_product.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate total final consumption of final and useful energy by product — calculate_fu_ex_product","title":"Calculate total final consumption of final and useful energy by product — calculate_fu_ex_product","text":"Calculate total final consumption (TFC) final useful stages (along additional stages) product. function first uses uses create_fd_sectors_list() function, user-supplied set final demand sectors fd_sectors identify final demand sectors desired analysis. Recca::finaldemand_aggregates() function applied .sutdata data frame product, calculate total final consumption across sectors supplied fd_sectors product.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_product.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate total final consumption of final and useful energy by product — calculate_fu_ex_product","text":"","code":"calculate_fu_ex_product(   .sutdata,   fd_sectors,   country_colname = IEATools::iea_cols$country,   method_colname = IEATools::iea_cols$method,   energy_type_colname = IEATools::iea_cols$energy_type,   last_stage_colname = IEATools::iea_cols$last_stage,   year_colname = IEATools::iea_cols$year,   sector_colname = PFUAggDatabase::sea_cols$sector_colname,   fd_sectors_colname = PFUAggDatabase::sea_cols$fd_sectors_colname,   e_product_colname = PFUAggDatabase::sea_cols$e_product_colname,   stage_colname = PFUAggDatabase::sea_cols$stage_colname,   gross_net_colname = PFUAggDatabase::sea_cols$gross_net_colname,   agg_by_colname = PFUAggDatabase::sea_cols$agg_by_colname,   ex_colname = PFUAggDatabase::sea_cols$ex_colname,   ex_net_colname = Recca::aggregate_cols$net_aggregate_demand,   ex_gross_colname = Recca::aggregate_cols$gross_aggregate_demand,   net_value = PFUAggDatabase::gross_net_metadata$net_value,   gross_value = PFUAggDatabase::gross_net_metadata$gross_value,   all_value = PFUAggDatabase::agg_metadata$all_value,   product_value = PFUAggDatabase::agg_metadata$product_value )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_product.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate total final consumption of final and useful energy by product — calculate_fu_ex_product","text":".sutdata data frame containing Physical Supply-Use Table (PSUT) matrices associated final demand sector names fd_sectors character vector final demand sectors. country_colname, method_colname, energy_type_colname, last_stage_colname, year_colname See IEATools::iea_cols. sector_colname, fd_sectors_colname, e_product_colname, stage_colname, gross_net_colname, agg_by_colname, ex_colname, ex_net_colname, ex_gross_colname See PFUAggDatabase::sea_cols. net_value, gross_value See PFUAggDatabase::gross_net_metadata. all_value, product_value See PFUAggDatabase::agg_metadata.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_product.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate total final consumption of final and useful energy by product — calculate_fu_ex_product","text":"data frame containing aggregate final useful energy/exergy data product","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_product.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate total final consumption of final and useful energy by product — calculate_fu_ex_product","text":"","code":"library(Recca) tfc_product <- Recca::UKEnergy2000mats %>%   tidyr::pivot_wider(names_from = matrix.name,                      values_from = matrix) %>%   dplyr::mutate(Method = \"PCM\") %>%   calculate_fu_ex_product(fd_sectors = c(\"Residential\"))"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_sector.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate total final consumption of final and useful energy by sector — calculate_fu_ex_sector","title":"Calculate total final consumption of final and useful energy by sector — calculate_fu_ex_sector","text":"Calculate total final consumption (TFC) final useful stages (along additional stages) sector. function first uses uses create_fd_sectors_list() function, user-supplied set final demand sectors fd_sectors identify final demand sectors desired analysis. Recca::finaldemand_aggregates() function applied .sutdata data frame sector, calculate total final consumption products sectors supplied fd_sectors.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_sector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate total final consumption of final and useful energy by sector — calculate_fu_ex_sector","text":"","code":"calculate_fu_ex_sector(   .sutdata,   fd_sectors,   country_colname = IEATools::iea_cols$country,   method_colname = IEATools::iea_cols$method,   energy_type_colname = IEATools::iea_cols$energy_type,   last_stage_colname = IEATools::iea_cols$last_stage,   year_colname = IEATools::iea_cols$year,   sector_colname = PFUAggDatabase::sea_cols$sector_colname,   fd_sectors_colname = PFUAggDatabase::sea_cols$fd_sectors_colname,   e_product_colname = PFUAggDatabase::sea_cols$e_product_colname,   stage_colname = PFUAggDatabase::sea_cols$stage_colname,   gross_net_colname = PFUAggDatabase::sea_cols$gross_net_colname,   agg_by_colname = PFUAggDatabase::sea_cols$agg_by_colname,   ex_colname = PFUAggDatabase::sea_cols$ex_colname,   ex_net_colname = Recca::aggregate_cols$net_aggregate_demand,   ex_gross_colname = Recca::aggregate_cols$gross_aggregate_demand,   net_value = PFUAggDatabase::gross_net_metadata$net_value,   gross_value = PFUAggDatabase::gross_net_metadata$gross_value,   all_value = PFUAggDatabase::agg_metadata$all_value,   sector_value = PFUAggDatabase::agg_metadata$sector_value )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_sector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate total final consumption of final and useful energy by sector — calculate_fu_ex_sector","text":".sutdata data frame containing Physical Supply-Use Table (PSUT) matrices associated final demand sector names fd_sectors character vector final demand sectors. country_colname, method_colname, energy_type_colname, last_stage_colname, year_colname See IEATools::iea_cols. sector_colname, fd_sectors_colname, e_product_colname, stage_colname, gross_net_colname, agg_by_colname, ex_colname, ex_net_colname, ex_gross_colname See PFUAggDatabase::sea_cols. net_value, gross_value See PFUAggDatabase::gross_net_metadata. all_value, sector_value See PFUAggDatabase::agg_metadata.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_sector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate total final consumption of final and useful energy by sector — calculate_fu_ex_sector","text":"data frame containing total final useful consumption sector","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_sector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate total final consumption of final and useful energy by sector — calculate_fu_ex_sector","text":"","code":"library(Recca) tfc_sector <- Recca::UKEnergy2000mats %>%   tidyr::pivot_wider(names_from = matrix.name,                      values_from = matrix) %>%   dplyr::mutate(Method = \"PCM\") %>%   calculate_fu_ex_sector(fd_sectors = c(\"Residential\"))"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_total.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate total final consumption of final and useful energy — calculate_fu_ex_total","title":"Calculate total final consumption of final and useful energy — calculate_fu_ex_total","text":"Calculate total final consumption (TFC) final useful stages (along additional stages). function first uses uses create_fd_sectors_list() function, user-supplied set final demand sectors fd_sectors identify final demand sectors desired analysis. Recca::finaldemand_aggregates() function applied .sutdata data frame, calculate total final consumption across products sectors.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate total final consumption of final and useful energy — calculate_fu_ex_total","text":"","code":"calculate_fu_ex_total(   .sutdata,   fd_sectors,   country_colname = IEATools::iea_cols$country,   method_colname = IEATools::iea_cols$method,   energy_type_colname = IEATools::iea_cols$energy_type,   last_stage_colname = IEATools::iea_cols$last_stage,   year_colname = IEATools::iea_cols$year,   sector_colname = PFUAggDatabase::sea_cols$sector_colname,   fd_sectors_colname = PFUAggDatabase::sea_cols$fd_sectors_colname,   e_product_colname = PFUAggDatabase::sea_cols$e_product_colname,   stage_colname = PFUAggDatabase::sea_cols$stage_colname,   gross_net_colname = PFUAggDatabase::sea_cols$gross_net_colname,   agg_by_colname = PFUAggDatabase::sea_cols$agg_by_colname,   ex_colname = PFUAggDatabase::sea_cols$ex_colname,   ex_net_colname = Recca::aggregate_cols$net_aggregate_demand,   ex_gross_colname = Recca::aggregate_cols$gross_aggregate_demand,   net_value = PFUAggDatabase::gross_net_metadata$net_value,   gross_value = PFUAggDatabase::gross_net_metadata$gross_value,   all_value = PFUAggDatabase::agg_metadata$all_value,   total_value = PFUAggDatabase::agg_metadata$total_value )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_total.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate total final consumption of final and useful energy — calculate_fu_ex_total","text":".sutdata data frame containing Physical Supply-Use Table (PSUT) matrices associated final demand sector names fd_sectors character vector final demand sectors. country_colname, method_colname, energy_type_colname, last_stage_colname, year_colname See IEATools::iea_cols. sector_colname, fd_sectors_colname, e_product_colname, stage_colname, gross_net_colname, agg_by_colname, ex_colname, ex_net_colname, ex_gross_colname See PFUAggDatabase::sea_cols. net_value, gross_value See PFUAggDatabase::gross_net_metadata. all_value, total_value See PFUAggDatabase::agg_metadata.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_total.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate total final consumption of final and useful energy — calculate_fu_ex_total","text":"data frame containing aggregate final useful energy/exergy data total","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_fu_ex_total.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate total final consumption of final and useful energy — calculate_fu_ex_total","text":"","code":"library(Recca) tfc_total <- Recca::UKEnergy2000mats %>%   tidyr::pivot_wider(names_from = matrix.name,                      values_from = matrix) %>%   dplyr::mutate(Method = \"PCM\") %>%   calculate_fu_ex_total(fd_sectors = c(\"Residential\"))"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_flow.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate total primary energy by flow — calculate_p_ex_flow","title":"Calculate total primary energy by flow — calculate_p_ex_flow","text":"Calculate total energy supply (TES) primary energy terms flow. metric formerly called total primary energy supply (TPES). function first uses uses Recca::find_p_industry_names() function, user-supplied set primary industry prefixes p_industry_prefixes identify primary industries desired analysis. Recca::primary_aggregates() function applied .sutdata data frame flow, calculate total energy supply across products flow.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_flow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate total primary energy by flow — calculate_p_ex_flow","text":"","code":"calculate_p_ex_flow(   .sutdata,   p_industry_prefixes,   country_colname = IEATools::iea_cols$country,   method_colname = IEATools::iea_cols$method,   energy_type_colname = IEATools::iea_cols$energy_type,   year_colname = IEATools::iea_cols$year,   flow_colname = PFUAggDatabase::sea_cols$flow_colname,   e_product_colname = PFUAggDatabase::sea_cols$e_product_colname,   stage_colname = PFUAggDatabase::sea_cols$stage_colname,   gross_net_colname = PFUAggDatabase::sea_cols$gross_net_colname,   agg_by_colname = PFUAggDatabase::sea_cols$agg_by_colname,   p_ind_comp_colname = PFUAggDatabase::sea_cols$p_ind_comp_colname,   p_ind_prefix_colname = PFUAggDatabase::sea_cols$p_ind_prefix_colname,   ex_colname = PFUAggDatabase::sea_cols$ex_colname,   ex_p_colname = Recca::aggregate_cols$aggregate_primary,   primary_value = IEATools::all_stages$primary,   all_value = PFUAggDatabase::agg_metadata$all_value,   flow_value = PFUAggDatabase::agg_metadata$flow_value )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_flow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate total primary energy by flow — calculate_p_ex_flow","text":".sutdata data frame containing Physical Supply-Use Table (PSUT) matrices. p_industry_prefixes character vector primary energy industry prefixes. Usually \"Resources\", \"Imports\", \"Stock changes\". country_colname, method_colname, energy_type_colname, year_colname See IEATools::iea_cols. flow_colname, e_product_colname, stage_colname, gross_net_colname, agg_by_colname, p_ind_comp_colname, p_ind_prefix_colname, ex_colname, ex_p_colname See PFUAggDatabase::sea_cols. primary_value string \"Primary\", representing Primary stage energy conversion chain, see IEATools::all_stages. all_value, flow_value See PFUAggDatabase::agg_metadata.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_flow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate total primary energy by flow — calculate_p_ex_flow","text":"data frame containing aggregate primary energy/exergy data flow.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_flow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate total primary energy by flow — calculate_p_ex_flow","text":"","code":"library(Recca) total_energy_supply <- Recca::UKEnergy2000mats %>%   tidyr::pivot_wider(names_from = matrix.name,                      values_from = matrix) %>%   dplyr::mutate(Method = \"PCM\") %>%   calculate_p_ex_flow(p_industry_prefixes = list(c(\"Resources\", \"Imports\")))"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_product.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate total primary energy by product — calculate_p_ex_product","title":"Calculate total primary energy by product — calculate_p_ex_product","text":"Calculate total energy supply (TES) primary energy terms product. metric formerly called total primary energy supply (TPES). function first uses uses Recca::find_p_industry_names() function, user-supplied set primary industry prefixes p_industry_prefixes identify primary industries desired analysis. Recca::primary_aggregates() function applied .sutdata data frame product, calculate total energy supply across flows product.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_product.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate total primary energy by product — calculate_p_ex_product","text":"","code":"calculate_p_ex_product(   .sutdata,   p_industry_prefixes,   country_colname = IEATools::iea_cols$country,   method_colname = IEATools::iea_cols$method,   energy_type_colname = IEATools::iea_cols$energy_type,   year_colname = IEATools::iea_cols$year,   flow_colname = PFUAggDatabase::sea_cols$flow_colname,   e_product_colname = PFUAggDatabase::sea_cols$e_product_colname,   stage_colname = PFUAggDatabase::sea_cols$stage_colname,   gross_net_colname = PFUAggDatabase::sea_cols$gross_net_colname,   agg_by_colname = PFUAggDatabase::sea_cols$agg_by_colname,   p_ind_comp_colname = PFUAggDatabase::sea_cols$p_ind_comp_colname,   p_ind_prefix_colname = PFUAggDatabase::sea_cols$p_ind_prefix_colname,   ex_colname = PFUAggDatabase::sea_cols$ex_colname,   ex_p_colname = Recca::aggregate_cols$aggregate_primary,   primary_value = IEATools::all_stages$primary,   all_value = PFUAggDatabase::agg_metadata$all_value,   product_value = PFUAggDatabase::agg_metadata$product_value )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_product.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate total primary energy by product — calculate_p_ex_product","text":".sutdata data frame containing Physical Supply-Use Table (PSUT) matrices. p_industry_prefixes character vector primary energy industry prefixes. Usually \"Resources\", \"Imports\", \"Stock changes\". country_colname, method_colname, energy_type_colname, year_colname See IEATools::iea_cols. flow_colname, e_product_colname, stage_colname, gross_net_colname, agg_by_colname, p_ind_comp_colname, p_ind_prefix_colname, ex_colname, ex_p_colname See PFUAggDatabase::sea_cols. primary_value string \"Primary\", representing Primary stage energy conversion chain, see IEATools::all_stages. all_value, product_value See PFUAggDatabase::agg_metadata.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_product.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate total primary energy by product — calculate_p_ex_product","text":"data frame containing aggregate primary energy/exergy data product.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_product.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate total primary energy by product — calculate_p_ex_product","text":"","code":"library(Recca) total_energy_supply <- Recca::UKEnergy2000mats %>%   tidyr::pivot_wider(names_from = matrix.name,                      values_from = matrix) %>%   dplyr::mutate(Method = \"PCM\") %>%   calculate_p_ex_product(p_industry_prefixes = list(c(\"Resources\", \"Imports\")))"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_total.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate total energy supply — calculate_p_ex_total","title":"Calculate total energy supply — calculate_p_ex_total","text":"Calculate total energy supply (TES) primary energy exergy terms. metric formerly called total primary energy supply (TPES) IEA. function first uses uses Recca::find_p_industry_names() function, user-supplied set primary industry prefixes p_industry_prefixes identify primary industries desired analysis. Recca::primary_aggregates() function applied .sutdata data frame total, calculate total energy supply across products flows.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate total energy supply — calculate_p_ex_total","text":"","code":"calculate_p_ex_total(   .sutdata,   p_industry_prefixes,   country_colname = IEATools::iea_cols$country,   method_colname = IEATools::iea_cols$method,   energy_type_colname = IEATools::iea_cols$energy_type,   year_colname = IEATools::iea_cols$year,   flow_colname = PFUAggDatabase::sea_cols$flow_colname,   e_product_colname = PFUAggDatabase::sea_cols$e_product_colname,   stage_colname = PFUAggDatabase::sea_cols$stage_colname,   gross_net_colname = PFUAggDatabase::sea_cols$gross_net_colname,   agg_by_colname = PFUAggDatabase::sea_cols$agg_by_colname,   p_ind_comp_colname = PFUAggDatabase::sea_cols$p_ind_comp_colname,   p_ind_prefix_colname = PFUAggDatabase::sea_cols$p_ind_prefix_colname,   ex_colname = PFUAggDatabase::sea_cols$ex_colname,   ex_p_colname = Recca::aggregate_cols$aggregate_primary,   primary_value = IEATools::all_stages$primary,   all_value = PFUAggDatabase::agg_metadata$all_value,   total_value = PFUAggDatabase::agg_metadata$total_value )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_total.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate total energy supply — calculate_p_ex_total","text":".sutdata data frame containing Physical Supply-Use Table (PSUT) matrices. p_industry_prefixes character vector primary energy industry prefixes. Usually \"Resources\", \"Imports\", \"Stock changes\". country_colname, method_colname, energy_type_colname, year_colname See IEATools::iea_cols. flow_colname, e_product_colname, stage_colname, gross_net_colname, agg_by_colname, p_ind_comp_colname, p_ind_prefix_colname, ex_colname, ex_p_colname See PFUAggDatabase::sea_cols. primary_value string \"Primary\", representing Primary stage energy conversion chain, see IEATools::all_stages. all_value, total_value See PFUAggDatabase::agg_metadata.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_total.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate total energy supply — calculate_p_ex_total","text":"data frame containing aggregate primary energy/exergy data total (total energy supply (TES)).","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_p_ex_total.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate total energy supply — calculate_p_ex_total","text":"","code":"library(Recca) total_energy_supply <- Recca::UKEnergy2000mats %>% tidyr::pivot_wider(names_from = matrix.name,                    values_from = matrix) %>%   dplyr::mutate(Method = \"PCM\") %>%   calculate_p_ex_total(p_industry_prefixes = list(c(\"Resources\", \"Imports\")))"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_pfu_aggregates.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate primary, final, and useful aggregates — calculate_pfu_aggregates","title":"Calculate primary, final, and useful aggregates — calculate_pfu_aggregates","text":"addition calculating primary, final, useful aggregates, function removes matrix columns adds GrossNet column data frame.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_pfu_aggregates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate primary, final, and useful aggregates — calculate_pfu_aggregates","text":"","code":"calculate_pfu_aggregates(   .agg_data,   countries,   years,   gross_net = Recca::efficiency_cols$gross_net,   R = \"R\",   U = \"U\",   U_feed = \"U_feed\",   U_eiou = \"U_EIOU\",   r_eiou = \"r_EIOU\",   V = \"V\",   Y = \"Y\",   S_units = \"S_units\",   gross = Recca::efficiency_cols$gross,   net = Recca::efficiency_cols$net,   last_stage = Recca::psut_cols$last_stage,   final = IEATools::all_stages$final,   useful = IEATools::all_stages$useful,   ex_p = Recca::aggregate_cols$aggregate_primary,   ex_f = IEATools::aggregate_cols$aggregate_final,   ex_u = IEATools::aggregate_cols$aggregate_useful,   ex_fd_gross = Recca::aggregate_cols$gross_aggregate_demand,   ex_fd_net = Recca::aggregate_cols$net_aggregate_demand,   ex_fd = Recca::aggregate_cols$aggregate_demand )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_pfu_aggregates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate primary, final, and useful aggregates — calculate_pfu_aggregates","text":".agg_data Input data containing gross net final demand aggregate columns. countries countries work . years years work . gross_net name column identifies gross net final demand aggregates. Default Recca::efficiency_cols$gross_net. R, U, U_feed, U_eiou, r_eiou, V, Y, S_units Columns matrices deleted. gross, net Strings inserted grossnet column. See Recca::efficiency_cols. last_stage string name column containing last stages energy conversion chains. Default Recca::psut_cols$last_stage. final, useful String names last stages. Defaults IEATools::all_stages. ex_p, ex_f, ex_u Names columns .agg_data primary, final, useful aggregations. ex_fd, ex_fd_gross, ex_fd_net Names columns total, gross, net final demand aggregates. Defaults Recca::aggregate_cols.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_pfu_aggregates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate primary, final, and useful aggregates — calculate_pfu_aggregates","text":"data frame matrices removed new GrossNet column.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_pfu_efficiencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot data frame to calculate PFU efficiencies — calculate_pfu_efficiencies","title":"Pivot data frame to calculate PFU efficiencies — calculate_pfu_efficiencies","text":"function pivots data frame produced add_grossnet_column() obtain primary-final, final-useful, primary-useful efficiencies.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_pfu_efficiencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot data frame to calculate PFU efficiencies — calculate_pfu_efficiencies","text":"","code":"calculate_pfu_efficiencies(   .eta_pfu_data,   countries,   years,   ex_p = IEATools::aggregate_cols$aggregate_primary,   ex_f = IEATools::aggregate_cols$aggregate_final,   ex_u = IEATools::aggregate_cols$aggregate_useful,   eta_pf = Recca::efficiency_cols$eta_pf,   eta_fu = Recca::efficiency_cols$eta_fu,   eta_pu = Recca::efficiency_cols$eta_pu )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_pfu_efficiencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot data frame to calculate PFU efficiencies — calculate_pfu_efficiencies","text":".eta_pfu_data data frame produced add_grossnet_column(). countries countries primary aggregates calculated. years years primary aggregates calculated. ex_p, ex_f, ex_u Names primary, final, useful energy exergy aggregate columns (respectively). Defaults IEATools::aggregate_cols. eta_pf, eta_fu, eta_pu names efficiency columns: primary--final, final--useful, primary--useful, respectively. Defaults Recca::efficiency_cols.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_pfu_efficiencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot data frame to calculate PFU efficiencies — calculate_pfu_efficiencies","text":"data frame ECC stage efficiencies.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_primary_aggregates.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate primary aggregates for PSUT data — calculate_primary_aggregates","title":"Calculate primary aggregates for PSUT data — calculate_primary_aggregates","text":"function routes Recca::primary_aggregates().","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_primary_aggregates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate primary aggregates for PSUT data — calculate_primary_aggregates","text":"","code":"calculate_primary_aggregates(   .psut_data,   countries,   years,   p_industries,   piece = \"noun\",   notation = list(RCLabels::bracket_notation, RCLabels::arrow_notation),   pattern_type = \"exact\",   prepositions = RCLabels::prepositions_list )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_primary_aggregates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate primary aggregates for PSUT data — calculate_primary_aggregates","text":".psut_data data primary aggregates calculated. countries countries primary aggregates calculated. years years primary aggregates calculated. p_industries string vector industries count \"primary\". piece piece aggregated. Default \"noun\". notation assumed notation labels. Default list(RCLabels::bracket_notation, RCLabels::arrow_notation). pattern_type type matching used primary industry names. Default \"leading\". prepositions expected propositions row column labels. Default RCLabels::prepositions_list.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_primary_aggregates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate primary aggregates for PSUT data — calculate_primary_aggregates","text":"version .psut_data additional column primary aggregate data.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_primary_ex_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame containing primary aggregate energy/exergy data — calculate_primary_ex_data","title":"Create a data frame containing primary aggregate energy/exergy data — calculate_primary_ex_data","text":"functions creates single data frame containing total energy/exergy country, year, method, energy quantification, grouping variable (Total, Product, Flow), Primary stage using functions: calculate_p_ex_total, calculate_p_ex_flow, calculate_p_ex_product, binding outputs functions single data frame.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_primary_ex_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame containing primary aggregate energy/exergy data — calculate_primary_ex_data","text":"","code":"calculate_primary_ex_data(.sutdata, p_industry_prefixes)"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_primary_ex_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data frame containing primary aggregate energy/exergy data — calculate_primary_ex_data","text":".sutdata data frame containing Physical Supply-Use Table (PSUT) matrices associated final demand sector names p_industry_prefixes character vector primary energy industry prefixes. Usually \"Resources\", \"Imports\", \"Stock changes\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_primary_ex_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data frame containing primary aggregate energy/exergy data — calculate_primary_ex_data","text":"data frame containing primary energy/exergy values aggregated total, flow product.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_primary_ex_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data frame containing primary aggregate energy/exergy data — calculate_primary_ex_data","text":"","code":"library(Recca) primary_data <- Recca::UKEnergy2000mats %>%   tidyr::pivot_wider(names_from = matrix.name,                      values_from = matrix) %>%   dplyr::mutate(Method = \"PCM\") %>%   calculate_primary_ex_data(p_industry_prefixes = list(c(\"Resources\", \"Imports\")))"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_sector_agg_eta_fu.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate final and useful sector sums and efficiencies — calculate_sector_agg_eta_fu","title":"Calculate final and useful sector sums and efficiencies — calculate_sector_agg_eta_fu","text":"function calculates final demand aggregates sector final useful stages resulting efficiencies.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_sector_agg_eta_fu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate final and useful sector sums and efficiencies — calculate_sector_agg_eta_fu","text":"","code":"calculate_sector_agg_eta_fu(   .psut_data,   fd_sectors,   piece = \"all\",   pattern_type = \"exact\",   notation = RCLabels::notations_list,   prepositions = RCLabels::prepositions_list,   R = Recca::psut_cols$R,   U = Recca::psut_cols$U,   U_feed = Recca::psut_cols$U_feed,   U_eiou = Recca::psut_cols$U_eiou,   r_eiou = Recca::psut_cols$r_eiou,   V = Recca::psut_cols$V,   Y = Recca::psut_cols$Y,   S_units = Recca::psut_cols$S_units,   country = Recca::psut_cols$country,   year = Recca::psut_cols$year,   last_stage = Recca::psut_cols$last_stage,   gross_aggregate_demand = Recca::aggregate_cols$gross_aggregate_demand,   net_aggregate_demand = Recca::aggregate_cols$net_aggregate_demand,   aggregate_demand = Recca::aggregate_cols$aggregate_demand,   gross_net = Recca::efficiency_cols$gross_net,   gross = Recca::efficiency_cols$gross,   net = Recca::efficiency_cols$net,   sector = \"Sector\",   colnames = \"colnames\",   rowtypes = \"rowtypes\",   coltypes = \"coltypes\",   final = IEATools::all_stages$final,   useful = IEATools::all_stages$useful,   eta_fu = Recca::efficiency_cols$eta_fu )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_sector_agg_eta_fu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate final and useful sector sums and efficiencies — calculate_sector_agg_eta_fu","text":".psut_data data frame PSUT matrices. fd_sectors sectors count final demand. piece piece aggregated. Default \"noun\". pattern_type look sectors. Default \"leading\". notation assumed notation labels. Default list(RCLabels::bracket_notation, RCLabels::arrow_notation). prepositions expected propositions row column labels. Default RCLabels::prepositions_list. R, U, U_feed, U_eiou, r_eiou, V, Y, S_units names matrix columns .psut_mats. Defaults Recca::psut_cols. country string name country column. Default Recca::psut_cols$country. year string name year column. Default Recca::psut_cols$year. last_stage string name last stage column. Default Recca::psut_cols$last_stage. aggregate_demand, gross_aggregate_demand, net_aggregate_demand names columns aggregate demand. Defaults Recca::aggregate_cols. gross_net name column tells whether aggregates gross net. Default Recca::efficiency_cols$gross_net. gross, net Strings identifying gross net quantities. Defaults Recca::efficiency_cols. sector name sector column. Default \"Sector\". colnames, rowtypes, coltypes Names columns deleted expanding matrices. Defaults \"colnames\", \"rowtypes\", \"coltypes\", respectively. final, useful string names final useful aggregates. Defaults IEATools::all_stages. eta_fu string name final--useful efficiency. Default Recca::efficiency_cols$eta_fu.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/calculate_sector_agg_eta_fu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate final and useful sector sums and efficiencies — calculate_sector_agg_eta_fu","text":"data frame sector energy exergy sums.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/chopRY.html","id":null,"dir":"Reference","previous_headings":"","what":"Chop the R and Y matrices — chopRY","title":"Chop the R and Y matrices — chopRY","text":"functions use Recca::chop_R() Recca::chop_Y() internally calculate new ECCs column R matrix row column Y matrix.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/chopRY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chop the R and Y matrices — chopRY","text":"","code":"chop_R_eccs(   .psut_data,   countries,   years,   do_chops,   method = \"SVD\",   tol_invert = .Machine$double.eps )  chop_Y_eccs(   .psut_data,   countries,   years,   do_chops,   method = \"SVD\",   tol_invert = .Machine$double.eps )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/chopRY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chop the R and Y matrices — chopRY","text":".psut_data data frame PSUT matrices. wide matrices. countries countries analyze. years years analyze. do_chops boolean tells whether R Y chops. method Tells invert matrices. Default \"SVD\". See details. tol_invert tolerance detecting linear dependencies columns matrices inverted. Default .Machine$double.eps.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/chopRY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chop the R and Y matrices — chopRY","text":"data frame chopped R Y matrix ECCs.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/chopRY.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chop the R and Y matrices — chopRY","text":"Chopping R Y matrices calculating new ECC involves matrix inversion step. method argument specifies method used calculating inverse. See matsbyname::invert_byname() additional details. tol_invert method single values apply matrices inverted. do_chops FALSE, data frame returned rows columns .psut_data.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/continent_aggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate continent aggregation — continent_aggregation","title":"Calculate continent aggregation — continent_aggregation","text":"function wrapper Recca::region_aggregates() also filters continents, thereby enabling parallel processing across continents.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/continent_aggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate continent aggregation — continent_aggregation","text":"","code":"continent_aggregation(   PSUT_Chop_all,   continents,   years,   continent = \"Continent\",   year = Recca::psut_cols$year,   many_colname = Recca::psut_cols$country,   few_colname = continent )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/continent_aggregation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate continent aggregation — continent_aggregation","text":"PSUT_Chop_all data frame PSUT matrices previously chopped. continents continents aggregation desired. years years aggregation desired. continent name continent column PSUT data frame. Default \"Continent\". year name year column PSUT data frame. Default Recca::psut_cols$year. many_colname name column many things aggregated continents. Default Recca::psut_cols$country. few_colname name column things remain output. Default value continent argument.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/continent_aggregation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate continent aggregation — continent_aggregation","text":"data frame countries aggregated continents according aggregation map desired continents years.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/continent_aggregation_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an aggregation map for continent aggregation — continent_aggregation_map","title":"Create an aggregation map for continent aggregation — continent_aggregation_map","text":"aggregation map named list. Names continents. List items 3-letter country codes.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/continent_aggregation_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an aggregation map for continent aggregation — continent_aggregation_map","text":"","code":"continent_aggregation_map(   exemplar_table_path,   exemplar_table_tab = \"exemplar_table\",   region_code = \"Region.code\",   continent = \"Continent\",   country = IEATools::iea_cols$country,   year = IEATools::iea_cols$year )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/continent_aggregation_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an aggregation map for continent aggregation — continent_aggregation_map","text":"exemplar_table_path path exemplar table exemplar_table_tab name tab file exemplar_table_path region information exists. Default \"exemplar_table\". region_code name column containing region codes. Default \"Region.code\". continent name continent column. Default \"Continent\". country name country column outgoing data frame. Default Recca::psut_cols$country. year name year column outgoing data frame. Default Recca::psut_cols$year.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/continent_aggregation_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an aggregation map for continent aggregation — continent_aggregation_map","text":"continent aggregation map.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/continent_aggregation_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an aggregation map for continent aggregation — continent_aggregation_map","text":"exemplar table assumed Excel file following columns: region_code years (numbers). body table contain 3-letter codes countries. exemplar table assumed exemplar_table_tab tab Excel file.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/create_fd_sectors_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile the list of final demand sectors — create_fd_sectors_list","title":"Compile the list of final demand sectors — create_fd_sectors_list","text":"IEATools package contains list final demand sectors IEATools::fd_sectors. However, aggregate rename sectors according aggregation map. names aggregation map items also count final demand sectors. function adds aggregated final demand sector names IEATools final demand sectors.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/create_fd_sectors_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile the list of final demand sectors — create_fd_sectors_list","text":"","code":"create_fd_sectors_list(iea_fd_sectors, sector_aggregation_map)"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/create_fd_sectors_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile the list of final demand sectors — create_fd_sectors_list","text":"iea_fd_sectors list final demand sectors, according IEA. sector_aggregation_map aggregation map used aggregate final demand sectors.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/create_fd_sectors_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile the list of final demand sectors — create_fd_sectors_list","text":"larger list final demand sectors comprised items iea_fd_sectors names sector_aggregation_map.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data pronoun — .data","title":"Data pronoun — .data","text":"See rlang::.data details.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data pronoun — .data","text":"","code":".data"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/despecified_aggregations.html","id":null,"dir":"Reference","previous_headings":"","what":"Despecify and aggregate all PSUT matrices — despecified_aggregations","title":"Despecify and aggregate all PSUT matrices — despecified_aggregations","text":"function uses Recca::despecified_aggregates() internally.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/despecified_aggregations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Despecify and aggregate all PSUT matrices — despecified_aggregations","text":"","code":"despecified_aggregations(   .psut_data,   countries,   years,   notation,   R = Recca::psut_cols$R,   U = Recca::psut_cols$U,   V = Recca::psut_cols$V,   Y = Recca::psut_cols$Y,   r_eiou = Recca::psut_cols$r_eiou,   U_eiou = Recca::psut_cols$U_eiou,   U_feed = Recca::psut_cols$U_feed,   S_units = Recca::psut_cols$S_units,   R_aggregated_colname = paste0(Recca::psut_cols$R, aggregated_suffix),   U_aggregated_colname = paste0(Recca::psut_cols$U, aggregated_suffix),   V_aggregated_colname = paste0(Recca::psut_cols$V, aggregated_suffix),   Y_aggregated_colname = paste0(Recca::psut_cols$Y, aggregated_suffix),   r_eiou_aggregated_colname = paste0(Recca::psut_cols$r_eiou, aggregated_suffix),   U_eiou_aggregated_colname = paste0(Recca::psut_cols$U_eiou, aggregated_suffix),   U_feed_aggregated_colname = paste0(Recca::psut_cols$U_feed, aggregated_suffix),   S_units_aggregated_colname = paste0(Recca::psut_cols$S_units, aggregated_suffix),   aggregated_suffix = Recca::aggregate_cols$aggregated_suffix )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/despecified_aggregations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Despecify and aggregate all PSUT matrices — despecified_aggregations","text":".psut_data data frame PSUT matrices. countries countries analyzed. years years analyzed. notation notations notation row column names can inferred. R, U, V, Y, r_eiou, U_eiou, U_feed, S_units names input columns .psut_data. Default values Recca::psut_cols. R_aggregated_colname, U_aggregated_colname, V_aggregated_colname, Y_aggregated_colname, r_eiou_aggregated_colname, U_eiou_aggregated_colname, U_feed_aggregated_colname, S_units_aggregated_colname names output aggregated columns. aggregated_suffix suffix columns aggregated matrices. Default Recca::aggregate_cols$aggregated_suffix.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/despecified_aggregations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Despecify and aggregate all PSUT matrices — despecified_aggregations","text":"data frame despecified aggregated matrices.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/efficiency_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Efficiency columns — efficiency_cols","title":"Efficiency columns — efficiency_cols","text":"string list containing names efficiency columns.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/efficiency_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Efficiency columns — efficiency_cols","text":"","code":"efficiency_cols"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/efficiency_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Efficiency columns — efficiency_cols","text":"string list 3 entries. eta_pf string indicating primary--final efficiency. \"eta_pf\". eta_fu string indicating final--useful efficiency. \"eta_fu\". eta_pu string indicating primary--final efficiency. \"eta_pu\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/efficiency_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Efficiency columns — efficiency_cols","text":"","code":"efficiency_cols #> $eta_pf #> [1] \"eta_pf\" #>  #> $eta_fu #> [1] \"eta_fu\" #>  #> $eta_pu #> [1] \"eta_pu\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/efficiency_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate PFU aggregations and efficiencies — efficiency_pipeline","title":"Calculate PFU aggregations and efficiencies — efficiency_pipeline","text":"Calculate PFU aggregations efficiencies","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/efficiency_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate PFU aggregations and efficiencies — efficiency_pipeline","text":"","code":"efficiency_pipeline(   .psut_data,   p_industries,   fd_sectors,   piece = \"noun\",   notation = list(RCLabels::bracket_notation, RCLabels::arrow_notation),   pattern_type = \"exact\",   prepositions = RCLabels::prepositions_list,   R = Recca::psut_cols$R,   U = Recca::psut_cols$U,   U_feed = Recca::psut_cols$U_feed,   U_eiou = Recca::psut_cols$U_eiou,   r_eiou = Recca::psut_cols$r_eiou,   V = Recca::psut_cols$V,   Y = Recca::psut_cols$Y,   S_units = Recca::psut_cols$S_units,   country = Recca::psut_cols$country,   method = Recca::psut_cols$method,   energy_type = Recca::psut_cols$energy_type,   ieamw = PFUDatabase::ieamw_cols$ieamw,   year = Recca::psut_cols$year,   gross = Recca::efficiency_cols$gross,   net = Recca::efficiency_cols$net,   gross_net = Recca::efficiency_cols$gross_net,   last_stage = Recca::psut_cols$last_stage,   primary = IEATools::all_stages$primary,   final = IEATools::all_stages$final,   useful = IEATools::all_stages$useful,   chopped_mat = PFUAggDatabase::aggregation_df_cols$chopped_mat,   chopped_var = PFUAggDatabase::aggregation_df_cols$chopped_var,   none = PFUAggDatabase::agg_metadata$none,   ex_p = Recca::aggregate_cols$aggregate_primary,   ex_f = IEATools::aggregate_cols$aggregate_final,   ex_u = IEATools::aggregate_cols$aggregate_useful,   ex_fd_gross = Recca::aggregate_cols$gross_aggregate_demand,   ex_fd_net = Recca::aggregate_cols$net_aggregate_demand,   ex_fd = Recca::aggregate_cols$aggregate_demand,   eta_pf = Recca::efficiency_cols$eta_pf,   eta_fu = Recca::efficiency_cols$eta_fu,   eta_pu = Recca::efficiency_cols$eta_pu,   tol = 1e-06,   .primary_aggs_ok = \".primary_aggs_OK\",   .final_aggs_ok = \".final_aggs_OK\",   .useful_aggs_ok = \".useful_aggs_OK\" )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/efficiency_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate PFU aggregations and efficiencies — efficiency_pipeline","text":".psut_data data frame PSUT data slice (row) data frame. p_industries string vector primary industries. fd_sectors string vector final demand sectors. piece piece labels used matching. Default \"noun\". notation notation used row column labels. Default list(RCLabels::bracket_notation, RCLabels::arrow_notation). pattern_type pattern type used row column matching. Default \"exact\". prepositions list prepositions row column labels. Default RCLabels::prepositions_list. R, U, V, Y, r_eiou, U_eiou, U_feed, S_units, country, method, energy_type, year, last_stage See Recca::psut_cols. ieamw See PFUDatabase::ieamw_cols. gross, net, gross_net See Recca::efficiency_cols. primary, final, useful See IEATools::all_stages. chopped_mat, chopped_var Column names identifying chopped matrices variables. See PFUAggDatabase::aggregation_df_cols none string signifying aggregation present. Default PFUAggDatabase::agg_metadata$none. ex_p, ex_fd_gross, ex_fd_net, ex_fd See Recca::aggregate_cols. ex_f, ex_u See IEATools::aggregate_cols. eta_pf, eta_fu, eta_pu See Recca::efficiency_cols. tol amount aggregate primary, final, useful values can different error thrown. Default 1e-6. .primary_aggs_ok, .final_aggs_ok, .useful_aggs_ok Names columns used internally assess whether primary, final, useful aggregations .","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/efficiency_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate PFU aggregations and efficiencies — efficiency_pipeline","text":"data frame metadata columns efficiencies","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/exiobase_coeffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Exiobase coefficients — exiobase_coeffs","title":"Calculate Exiobase coefficients — exiobase_coeffs","text":"CL-PFU Database supplies coefficients Exiobase. function calculates coefficients returns data frame.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/exiobase_coeffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Exiobase coefficients — exiobase_coeffs","text":"","code":"exiobase_coeffs(phi_vecs)"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/exiobase_coeffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Exiobase coefficients — exiobase_coeffs","text":"phi_vecs data frame phi (exergy--energy ratio) coefficients.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/exiobase_coeffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Exiobase coefficients — exiobase_coeffs","text":"data frame Exiobase coefficients.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/filter_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter countries — filter_countries","title":"Filter countries — filter_countries","text":"Chooses countries use rest pipeline.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/filter_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter countries — filter_countries","text":"","code":"filter_countries(   .psut_data,   countries = \"all\",   country = IEATools::iea_cols$country )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/filter_countries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter countries — filter_countries","text":".psut_data entire PSUT data frame, read pinboard. countries vector 3-letter country codes countries used analysis. Default value \"\", meaning countries .psut_data included. country name country column .psut_data. Default Recca::psut_cols$country.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/filter_countries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter countries — filter_countries","text":"filtered version .psut_data..","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/filter_countries_and_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter countries — filter_countries_and_years","title":"Filter countries — filter_countries_and_years","text":"Chooses countries use rest pipeline.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/filter_countries_and_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter countries — filter_countries_and_years","text":"","code":"filter_countries_and_years(   .psut_data,   countries = \"all\",   years = \"all\",   country = IEATools::iea_cols$country,   year = IEATools::iea_cols$year )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/filter_countries_and_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter countries — filter_countries_and_years","text":".psut_data entire PSUT data frame, read pinboard. countries vector 3-letter country codes countries used analysis. Default value \"\", meaning countries .psut_data included. years numeric vector years used analysis. Default value \"\", meaning ll years .psut_dat included. country, year See IEATools::iea_cols.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/filter_countries_and_years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter countries — filter_countries_and_years","text":"filtered version .psut_data.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/get_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a targets workflow — get_pipeline","title":"Create a targets workflow — get_pipeline","text":"target factory whose arguments specify details targets workflow constructed","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/get_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a targets workflow — get_pipeline","text":"","code":"get_pipeline(   countries = \"all\",   years = \"all\",   do_chops,   psut_release,   psut_without_neu_release,   phi_vecs_release,   aggregation_maps_path,   pipeline_releases_folder,   pipeline_caches_folder,   release = FALSE )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/get_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a targets workflow — get_pipeline","text":"countries string vector 3-letter country codes. Default \"\", meaning available countries analyzed. years numeric vector years analyzed. Default \"\", meaning available years analyzed. do_chops boolean tells whether perform R Y chops. psut_release release use pipeline_releases_folder. See details. psut_without_neu_release release use pipeline_releases_folder. See details. phi_vecs_release release use pipeline_releases_folder. See details. aggregation_maps_path path Excel file aggregation maps. pipeline_releases_folder path folder releases output targets pinned. pipeline_caches_folder path folder releases pipeline caches stored. release Boolean tells whether release results. Default FALSE.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/get_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a targets workflow — get_pipeline","text":"list tar_targets executed workflow.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/gross_net_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Gross and net metadata — gross_net_metadata","title":"Gross and net metadata — gross_net_metadata","text":"string list containing gross net metadata.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/gross_net_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gross and net metadata — gross_net_metadata","text":"","code":"gross_net_metadata"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/gross_net_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gross and net metadata — gross_net_metadata","text":"string list 2 entries. gross_value string indicating gross aggregation. \"Gross\". net_value string indicating net aggregation. \"Net\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/gross_net_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gross and net metadata — gross_net_metadata","text":"","code":"gross_net_metadata #> $gross_value #> [1] \"Gross\" #>  #> $net_value #> [1] \"Net\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/grouped_aggregations.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate PSUT matrices by row and column groups — grouped_aggregations","title":"Aggregate PSUT matrices by row and column groups — grouped_aggregations","text":"Aggregating groups rows columns can accomplished aggregation_map. Internally, function calls Recca::grou_aggregates(), arguments aggregation_map, margin, pattern_type control behavior.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/grouped_aggregations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate PSUT matrices by row and column groups — grouped_aggregations","text":"","code":"grouped_aggregations(   .psut_data,   countries,   years,   aggregation_map,   margin = list(c(1, 2)),   pattern_type = \"exact\",   R = Recca::psut_cols$R,   U = Recca::psut_cols$U,   V = Recca::psut_cols$V,   Y = Recca::psut_cols$Y,   r_eiou = Recca::psut_cols$r_eiou,   U_eiou = Recca::psut_cols$U_eiou,   U_feed = Recca::psut_cols$U_feed,   S_units = Recca::psut_cols$S_units,   R_aggregated_colname = paste0(Recca::psut_cols$R, aggregated_suffix),   U_aggregated_colname = paste0(Recca::psut_cols$U, aggregated_suffix),   V_aggregated_colname = paste0(Recca::psut_cols$V, aggregated_suffix),   Y_aggregated_colname = paste0(Recca::psut_cols$Y, aggregated_suffix),   r_eiou_aggregated_colname = paste0(Recca::psut_cols$r_eiou, aggregated_suffix),   U_eiou_aggregated_colname = paste0(Recca::psut_cols$U_eiou, aggregated_suffix),   U_feed_aggregated_colname = paste0(Recca::psut_cols$U_feed, aggregated_suffix),   S_units_aggregated_colname = paste0(Recca::psut_cols$S_units, aggregated_suffix),   aggregated_suffix = Recca::aggregate_cols$aggregated_suffix )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/grouped_aggregations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate PSUT matrices by row and column groups — grouped_aggregations","text":".psut_data data frame PSUT matrices. countries countries analyzed. years years analyzed. aggregation_map named list rows columns aggregated (NULL). margin 1, 2, c(1, 2) row aggregation, column aggregation, . string, margin can row column type. Default c(1, 2). pattern_type See RCLabels::make_or_pattern(). Default \"exact\". R, U, V, Y, r_eiou, U_eiou, U_feed, S_units names input columns .psut_data. Default values taken Recca::psut_cols. R_aggregated_colname, U_aggregated_colname, V_aggregated_colname, Y_aggregated_colname, r_eiou_aggregated_colname, U_eiou_aggregated_colname, U_feed_aggregated_colname, S_units_aggregated_colname names output aggregated columns. aggregated_suffix suffix columns aggregated matrices. Default Recca::aggregate_cols$aggregated_suffix.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/grouped_aggregations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate PSUT matrices by row and column groups — grouped_aggregations","text":"version .psut_data aggregated rows columns.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/join_psut_continents.html","id":null,"dir":"Reference","previous_headings":"","what":"Join the continent aggregation map to the PSUT data frame — join_psut_continents","title":"Join the continent aggregation map to the PSUT data frame — join_psut_continents","text":"join accomplished way supports aggregating continents.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/join_psut_continents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join the continent aggregation map to the PSUT data frame — join_psut_continents","text":"","code":"join_psut_continents(   PSUT,   years,   continent_aggregation_map,   country = Recca::psut_cols$country,   year = Recca::psut_cols$year,   continent = \"Continent\" )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/join_psut_continents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join the continent aggregation map to the PSUT data frame — join_psut_continents","text":"PSUT PSUT data frame. years years join occur. continent_aggregation_map list names continents vectors countries items. country name country column. Default Recca::psut_cols$country. year name year column. Default Recca::psut_cols$year. continent name continent column. Default \"Continent\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/join_psut_continents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join the continent aggregation map to the PSUT data frame — join_psut_continents","text":"PSUT additional \"Continent\" column.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/load_aggregation_maps.html","id":null,"dir":"Reference","previous_headings":"","what":"Load aggregation maps — load_aggregation_maps","title":"Load aggregation maps — load_aggregation_maps","text":"Load aggregation tables create aggregation maps use workflow.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/load_aggregation_maps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load aggregation maps — load_aggregation_maps","text":"","code":"load_aggregation_maps(   path,   aggregation_file_tabs = PFUAggDatabase::aggregation_file_tab_names,   many_colname = PFUAggDatabase::aggregation_file_cols$many_colname,   few_colname = PFUAggDatabase::aggregation_file_cols$few_colname )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/load_aggregation_maps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load aggregation maps — load_aggregation_maps","text":"path path Excel file containing aggregation tables. aggregation_file_tabs list tabs aggregation file. names programmatic names tabs. items actual names. Default PFUAggDatabase::aggregation_file_tabs. many_colname name many column aggregation tables. Default PFUAggDatabase::aggregation_file_info$many_colname. few_colname name column aggregation tables. Default PFUAggDatabase::aggregation_file_info$few_colname.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/load_aggregation_maps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load aggregation maps — load_aggregation_maps","text":"named list aggregation maps. names give aggregation map. items aggregation maps .","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/load_aggregation_maps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load aggregation maps — load_aggregation_maps","text":"aggregation table consists many column column. aggregation map named list items, names items many.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/output_file_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Output file information — output_file_info","title":"Output file information — output_file_info","text":"string list containing filename tabs output files.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/output_file_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output file information — output_file_info","text":"","code":"output_file_info"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/output_file_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Output file information — output_file_info","text":"string list 3 entries. agg_eta_filename string value output file name. \"AggregateEfficiencyResults.xlsx\". agg_tabname string name aggregates tab. \"Aggregates\". eta_tabname string name efficiency tab. \"etas\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/output_file_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output file information — output_file_info","text":"","code":"output_file_info #> $agg_eta_filename #> [1] \"AggregateEfficiencyResults.xlsx\" #>  #> $agg_tabname #> [1] \"Aggregates\" #>  #> $eta_tabname #> [1] \"etas\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pivot_agg_eta_wide_by_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot an aggregation or efficiency data frame wide by years — pivot_agg_eta_wide_by_year","title":"Pivot an aggregation or efficiency data frame wide by years — pivot_agg_eta_wide_by_year","text":"Converts aggregation efficiencies data frame (tidy format) one wide years.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pivot_agg_eta_wide_by_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot an aggregation or efficiency data frame wide by years — pivot_agg_eta_wide_by_year","text":"","code":"pivot_agg_eta_wide_by_year(   .df,   pivot_cols,   country = IEATools::iea_cols$country,   year = IEATools::iea_cols$year,   quantity = IEATools::template_cols$quantity,   .values = IEATools::template_cols$.values )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pivot_agg_eta_wide_by_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot an aggregation or efficiency data frame wide by years — pivot_agg_eta_wide_by_year","text":".df data frame pivot. pivot_cols columns pivot. country, year See IEATools::iea_cols. quantity, .values See IEATools::template_cols.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pivot_agg_eta_wide_by_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot an aggregation or efficiency data frame wide by years — pivot_agg_eta_wide_by_year","text":"version .df pivoted wide years.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pivot_for_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot a data frame for saving as a .csv file — pivot_for_csv","title":"Pivot a data frame for saving as a .csv file — pivot_for_csv","text":"Data frames tidy format pivoted wide--year data frames saving .csv files. function pivoting.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pivot_for_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot a data frame for saving as a .csv file — pivot_for_csv","text":"","code":"pivot_for_csv(.df, val_cols, year_col = Recca::psut_cols$year, var_col = \"var\")"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pivot_for_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot a data frame for saving as a .csv file — pivot_for_csv","text":".df data frame pivoted. val_cols Data columns swapped var_col. variable names string vector. year_col string name year column. Default Recca::psut_cols$year. var_col name resulting variable name column. Default \"var\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pivot_for_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot a data frame for saving as a .csv file — pivot_for_csv","text":"pivoted data frame.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pr_in_agg_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle several aggregation calculations together — pr_in_agg_pipeline","title":"Bundle several aggregation calculations together — pr_in_agg_pipeline","text":"efficiency pipeline calculates efficiencies various despecifications, row aggregations, column aggregations.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pr_in_agg_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle several aggregation calculations together — pr_in_agg_pipeline","text":"","code":"pr_in_agg_pipeline(   .psut_data,   product_agg_map,   industry_agg_map,   p_industries,   do_chops = FALSE,   pattern_type = \"exact\",   piece = \"noun\",   bracket_notation = RCLabels::bracket_notation,   arrow_notation = RCLabels::arrow_notation,   prepositions = RCLabels::prepositions_list,   method = \"SVD\",   tol_invert = .Machine$double.eps,   product_type = Recca::row_col_types$product_type,   industry_type = Recca::row_col_types$industry_type,   R = Recca::psut_cols$R,   U = Recca::psut_cols$U,   V = Recca::psut_cols$V,   Y = Recca::psut_cols$Y,   r_eiou = Recca::psut_cols$r_eiou,   U_eiou = Recca::psut_cols$U_eiou,   U_feed = Recca::psut_cols$U_feed,   S_units = Recca::psut_cols$S_units,   .prime = \"_prime\",   country = Recca::psut_cols$country,   year = Recca::psut_cols$year,   R_aggregated_colname = paste0(R, aggregated_suffix),   U_aggregated_colname = paste0(U, aggregated_suffix),   U_feed_aggregated_colname = paste0(U_feed, aggregated_suffix),   U_eiou_aggregated_colname = paste0(U_eiou, aggregated_suffix),   r_eiou_aggregated_colname = paste0(r_eiou, aggregated_suffix),   V_aggregated_colname = paste0(V, aggregated_suffix),   Y_aggregated_colname = paste0(Y, aggregated_suffix),   S_units_aggregated_colname = paste0(S_units, aggregated_suffix),   aggregated_suffix = Recca::aggregate_cols$aggregated_suffix,   product_aggregation = PFUAggDatabase::aggregation_df_cols$product_aggregation,   industry_aggregation = PFUAggDatabase::aggregation_df_cols$industry_aggregation,   specified = PFUAggDatabase::aggregation_df_cols$specified,   despecified = PFUAggDatabase::aggregation_df_cols$despecified,   grouped = PFUAggDatabase::aggregation_df_cols$grouped,   chopped_mat = PFUAggDatabase::aggregation_df_cols$chopped_mat,   chopped_var = PFUAggDatabase::aggregation_df_cols$chopped_var,   Y_matname = Recca::psut_cols$Y,   R_matname = Recca::psut_cols$R,   product_sector = PFUAggDatabase::aggregation_df_cols$product_sector,   none = PFUAggDatabase::agg_metadata$none )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pr_in_agg_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle several aggregation calculations together — pr_in_agg_pipeline","text":".psut_data PSUT matrices wide--matrix format. entire data frame, slice (row) data frame, group data frame. product_agg_map product aggregation map. industry_agg_map industry aggregation map. p_industries string vector primary industries. do_chops boolean tells whether chopping R Y matrices. pattern_type matching type row column labels. Default \"exact\". piece piece row column labels matched. Default \"noun\". bracket_notation row column notation. Default RCLabels::bracket_notation. arrow_notation row column notation. Default RCLabels::arrow_notation. prepositions Prepositions used row column labels. Default RCLabels::prepositions_list. method method matrix inversion chopping R Y matrices. Default \"SVD\" singular value decomposition. tol_invert tolerance nearness 0 matrix inversion. Default .Machine$double.eps. product_type, industry_type See Recca::row_col_types. R, U, U_feed, U_eiou, r_eiou, V, Y, S_units, country, year names input columns .psut_data. Default values Recca::psut_cols. .prime suffix columns containing chopped ECC matrices. Default \"_prime\". R_aggregated_colname, U_aggregated_colname, V_aggregated_colname, Y_aggregated_colname, r_eiou_aggregated_colname, U_eiou_aggregated_colname, U_feed_aggregated_colname, S_units_aggregated_colname names output aggregated columns. Defaults matrix names aggregated_suffix appended. aggregated_suffix suffix aggregated column names. See Recca::aggregate_cols. product_aggregation, industry_aggregation, specified, despecified, grouped, product_sector See PFUAggDatabase::aggregation_df_cols. chopped_mat, chopped_var Column names indicate matrix chopped, R Y. Default values PFUAggDatabase::aggregation_df_cols. Y_matname, R_matname Matrix names chopped_mat chopped_var columns. Default values Recca::psut_cols$R Recca::psut_cols$Y. none string specify aggregations. Default PFUAggDatabase::agg_metadata$none.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pr_in_agg_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundle several aggregation calculations together — pr_in_agg_pipeline","text":"data frame efficiencies original, despecified, grouped versions .psut_data.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/pr_in_agg_pipeline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bundle several aggregation calculations together — pr_in_agg_pipeline","text":"function attempt streamline calculation pipeline eliminating need repeatedly re-load intermediate targets disk. bundles work previous targets despecify aggregate product industry dimensions PSUT matrices, group aggregate products, group aggregate industries, group aggregate products industries, calculate primary--final efficiencies, calculate primary--useful efficiencies, calculate final--useful efficiencies.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/quasi-quote-assign.html","id":null,"dir":"Reference","previous_headings":"","what":"Assignment — :=","title":"Assignment — :=","text":"See rlang:::= details.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/quasi-quote-assign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assignment — :=","text":"","code":"x := y"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/region_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation regions — region_pipeline","title":"Aggregation regions — region_pipeline","text":"database can benefit continent World aggregations. function bundles aggregations single function.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/region_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation regions — region_pipeline","text":"","code":"region_pipeline(   .psut_data,   region_aggregation_map,   continent_aggregation_map,   world_aggregation_map,   country = Recca::psut_cols$country,   year = Recca::psut_cols$year,   region = \"Region\",   continent = \"Continent\",   world = \"World\" )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/region_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregation regions — region_pipeline","text":".psut_data data frame PSUT information. region_aggregation_map aggregation map shows aggregate countries regions, like FoSUN FoYUG. Entries sublist assumed unique across sublists. .e., country one region. continent_aggregation_map aggregation map shows aggregate countries continents. Entries sublist assumed unique across sublists. .e., country one one continent. world_aggregation_map aggregation map shows aggregate continents world. country name country column. Default Recca::psut_cols$country. year name year column. Default Recca::psut_cols$year. region name region column. Default \"Region\". continent name continent column. Default \"Continent\". world name world column. Default \"World\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/region_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregation regions — region_pipeline","text":"data frame includes new \"Country\"s regions, continents, World.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/region_pipeline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregation regions — region_pipeline","text":"regional aggregations names 5 characters longer.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/rename_prime_psut_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename ","title":"Rename ","text":"Deletes original (un-prime) columns renames prime columns names.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/rename_prime_psut_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename ","text":"","code":"rename_prime_psut_columns(   .psut_data,   suffix = \"_prime\",   R = Recca::psut_cols$R,   U = Recca::psut_cols$U,   V = Recca::psut_cols$V,   Y = Recca::psut_cols$Y,   r_eiou = Recca::psut_cols$r_eiou,   U_eiou = Recca::psut_cols$U_eiou,   U_feed = Recca::psut_cols$U_feed )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/rename_prime_psut_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename ","text":".psut_data data frame PSUT matrices. suffix suffix columns aggregated matrices. Default \"_prime\". R, U, V, Y, r_eiou, U_eiou, U_feed names input columns .psut_data.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/rename_prime_psut_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename ","text":"version .psut_data original PSUT columns deleted suffixed columns renamed original names.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/rename_prime_psut_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename ","text":"internal helper function intended broader use.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/rename_suffixed_psut_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete original and rename aggregated columns — rename_suffixed_psut_columns","title":"Delete original and rename aggregated columns — rename_suffixed_psut_columns","text":"helpful function deletes original PSUT columns renames aggregated columns original names.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/rename_suffixed_psut_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete original and rename aggregated columns — rename_suffixed_psut_columns","text":"","code":"rename_suffixed_psut_columns(   .psut_data,   suffix = Recca::aggregate_cols$aggregated_suffix,   R = Recca::psut_cols$R,   U = Recca::psut_cols$U,   V = Recca::psut_cols$V,   Y = Recca::psut_cols$Y,   r_eiou = Recca::psut_cols$r_eiou,   U_eiou = Recca::psut_cols$U_eiou,   U_feed = Recca::psut_cols$U_feed,   S_units = Recca::psut_cols$S_units )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/rename_suffixed_psut_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete original and rename aggregated columns — rename_suffixed_psut_columns","text":".psut_data data frame PSUT matrices. suffix suffix columns aggregated matrices. Default Recca::aggregate_cols$aggregated_suffix. R, U, V, Y, r_eiou, U_eiou, U_feed, S_units names input columns .psut_data.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/rename_suffixed_psut_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete original and rename aggregated columns — rename_suffixed_psut_columns","text":"version .psut_data original PSUT columns deleted suffixed columns renamed original names.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/rename_suffixed_psut_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete original and rename aggregated columns — rename_suffixed_psut_columns","text":"Columns names given R, U, V, Y, r_eiou, U_eiou, U_feed, S_units arguments. suffix given suffix argument. function helper function , thus, public.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/sea_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame column names — sea_cols","title":"Data frame column names — sea_cols","text":"string list containing names column names values aggregation data frames.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/sea_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame column names — sea_cols","text":"","code":"sea_cols"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/sea_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame column names — sea_cols","text":"string list 10 entries. stage_colname name metadata column tells stage energy conversion chain. \"Stage\". gross_net_colname name metadata column indicates gross net energy. \"Gross.Net\" e_product_colname name metadata column indicates energy products. \"E.product\". e_sector_colname name metadata column indicates energy sectors. \"Sector\". flow_colname name metadata column indicates IEA flows. \"Flow\". agg_by_colname name metadata column indicates things aggregated. \"Aggregation.\". fd_sectors_colname name metadata column indicates final demand sectors. \"Fd.sectors\". p_ind_comp_colname name metadata column indicates primary industries. \"p_industries_colname\". p_ind_prefix_colname name metadata column indicates primary industry indices. \"p_industry_prefixes\". ex_colname name metadata column indicates energy exergy. \"EX\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/sea_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data frame column names — sea_cols","text":"","code":"sea_cols #> $stage_colname #> [1] \"Stage\" #>  #> $gross_net_colname #> [1] \"Gross.Net\" #>  #> $e_product_colname #> [1] \"E.product\" #>  #> $e_sector_colname #> [1] \"Sector\" #>  #> $flow_colname #> [1] \"Flow\" #>  #> $agg_by_colname #> [1] \"Aggregation.by\" #>  #> $fd_sectors_colname #> [1] \"Fd.sectors\" #>  #> $p_ind_comp_colname #> [1] \"p_industries_complete\" #>  #> $p_ind_prefix_colname #> [1] \"p_industry_prefixes\" #>  #> $ex_colname #> [1] \"EX\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_chopped_ECCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack chopped ECC data frames — stack_chopped_ECCs","title":"Stack chopped ECC data frames — stack_chopped_ECCs","text":"function stacks chopped data frames dplyr::bind_rows().","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_chopped_ECCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack chopped ECC data frames — stack_chopped_ECCs","text":"","code":"stack_chopped_ECCs(   psut,   chop_R = NULL,   chop_Y = NULL,   chopped_mat = PFUAggDatabase::aggregation_df_cols$chopped_mat,   chopped_var = PFUAggDatabase::aggregation_df_cols$chopped_var,   Y_matname = Recca::psut_cols$Y,   R_matname = Recca::psut_cols$R,   product_sector = PFUAggDatabase::aggregation_df_cols$product_sector,   none = PFUAggDatabase::agg_metadata$none )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_chopped_ECCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack chopped ECC data frames — stack_chopped_ECCs","text":"psut, chop_Y, chop_R Data frames stacked. chopped_mat, chopped_var Names columns tell matrix chopped (chop_mat) column contains row column name used chop. R_matname, Y_matname names R Y matrices added chopped_var column data frame. Defaults taken Recca::psut_cols. product_sector name data frame column contains variable chopped. none string chopping. Used PSUT_Re_all_Gr_all. Default PFUAggDatabase::agg_metadata$none.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_chopped_ECCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stack chopped ECC data frames — stack_chopped_ECCs","text":"row-bound version PSUT_Re_all_Gr_all, PSUT_Re_all_Gr_all_Chop_Y, PSUT_Re_all_Gr_all_Chop_R.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_despecification_aggregations.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack all product and industry aggregations — stack_despecification_aggregations","title":"Stack all product and industry aggregations — stack_despecification_aggregations","text":"product industry aggregations need present data frame. function stacks (dplyr::bind_rows) adds columns identify levels product industry aggregation.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_despecification_aggregations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack all product and industry aggregations — stack_despecification_aggregations","text":"","code":"stack_despecification_aggregations(   specified_df,   Ds_Pr = NULL,   Ds_In = NULL,   Ds_PrIn = NULL,   product_aggregation = PFUAggDatabase::aggregation_df_cols$product_aggregation,   industry_aggregation = PFUAggDatabase::aggregation_df_cols$industry_aggregation,   specified = PFUAggDatabase::aggregation_df_cols$specified,   despecified = PFUAggDatabase::aggregation_df_cols$despecified )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_despecification_aggregations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack all product and industry aggregations — stack_despecification_aggregations","text":"specified_df data frame rows columns specified. Ds_Pr data frame products despecified. Ds_In data frame industries despecified. Ds_PrIn data frame products industries despecified. product_aggregation, industry_aggregation, specified, despecified See PFUAggDatabase::aggregation_df_cols.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_despecification_aggregations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stack all product and industry aggregations — stack_despecification_aggregations","text":"stacked data frame containing new metadata columns product industry specification.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_group_aggregations.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack grouped data frames — stack_group_aggregations","title":"Stack grouped data frames — stack_group_aggregations","text":"Matrices can grouped products industries. function stacks data frames appropriate metadata columns using dplyr::bind_rows().","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_group_aggregations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack grouped data frames — stack_group_aggregations","text":"","code":"stack_group_aggregations(   despecified_df,   Gr_Pr = NULL,   Gr_In = NULL,   Gr_PrIn = NULL,   product_aggregation = PFUAggDatabase::aggregation_df_cols$product_aggregation,   industry_aggregation = PFUAggDatabase::aggregation_df_cols$industry_aggregation,   specified = PFUAggDatabase::aggregation_df_cols$specified,   despecified = PFUAggDatabase::aggregation_df_cols$despecified,   ungrouped = PFUAggDatabase::aggregation_df_cols$ungrouped,   grouped = PFUAggDatabase::aggregation_df_cols$grouped )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_group_aggregations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack grouped data frames — stack_group_aggregations","text":"despecified_df data frame products industries despecified yet grouped. Gr_Pr data frame grouped products. Default NULL. Gr_In data frame grouped industries. Default NULL. Gr_PrIn data frame grouped products industries. Default NULL. product_aggregation product aggregation column. Default PFUAggDatabase::aggregation_df_cols$product_aggregation. industry_aggregation industry aggregation column. Default PFUAggDatabase::aggregation_df_cols$industry_aggregation. specified string indicates product industry specified. Default PFUAggDatabase::aggregation_df_cols$specified. despecified string indicates product industry despecified Default PFUAggDatabase::aggregation_df_cols$despecified. ungrouped string indicates product industry grouped. Default PFUAggDatabase::aggregation_df_cols$ungrouped. grouped string indicates product industry grouped. Default PFUAggDatabase::aggregation_df_cols$grouped.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/stack_group_aggregations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stack grouped data frames — stack_group_aggregations","text":"stacked set data frames different product industry groupings","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/world_aggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate continents to world — world_aggregation","title":"Aggregate continents to world — world_aggregation","text":"function wrapper Recca::region_aggregates() also filters years, thereby enabling parallel processing across years.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/world_aggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate continents to world — world_aggregation","text":"","code":"world_aggregation(   PSUT_Chop_all_Re_continents,   years,   world_aggregation_map,   country = Recca::psut_cols$country,   world = \"World\",   year = Recca::psut_cols$year,   many_colname = Recca::psut_cols$country,   few_colname = world )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/world_aggregation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate continents to world — world_aggregation","text":"PSUT_Chop_all_Re_continents data frame PSUT matrices continents. years years aggregation desired. world_aggregation_map aggregation map sum continents world. country name country column PSUT_Chop_all_Re_continents data frame. Default Recca::psut_cols$country. world name column things remain output. Default \"World\". year name year column PSUT data frame. Default Recca::psut_cols$year. many_colname name column many things aggregated continents. Default Recca::psut_cols$country. few_colname name column things remain output. Default value world argument.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/world_aggregation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate continents to world — world_aggregation","text":"data frame continents aggregated world according aggregation map desired years.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/write_agg_etas_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot and write aggregate efficiencies to an Excel file — write_agg_etas_xlsx","title":"Pivot and write aggregate efficiencies to an Excel file — write_agg_etas_xlsx","text":"incoming data frame expected contain year column well primary, final, useful, eta_pf, eta_fu, eta_pu columns.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/write_agg_etas_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot and write aggregate efficiencies to an Excel file — write_agg_etas_xlsx","text":"","code":"write_agg_etas_xlsx(   .agg_etas,   path,   aggs_tabname = PFUAggDatabase::output_file_info$agg_tabname,   etas_tabname = PFUAggDatabase::output_file_info$eta_tabname,   wide_by_year = TRUE,   primary = IEATools::all_stages$primary,   final = IEATools::all_stages$final,   useful = IEATools::all_stages$useful,   eta_pf_colname = PFUAggDatabase::efficiency_cols$eta_pf,   eta_fu_colname = PFUAggDatabase::efficiency_cols$eta_fu,   eta_pu_colname = PFUAggDatabase::efficiency_cols$eta_pu,   year = IEATools::iea_cols$year,   country = IEATools::iea_cols$country,   quantity = IEATools::template_cols$quantity,   .values = IEATools::template_cols$.values )"},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/write_agg_etas_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot and write aggregate efficiencies to an Excel file — write_agg_etas_xlsx","text":".agg_etas data frame created eta_Re_all_St_pfu target. path path Excel file saved. aggs_tabname, etas_tabname See PFUAggDatabase::output_file_info. wide_by_year TRUE (default), incoming data frame pivoted wide years. FALSE, data unchanged. primary, final, useful See IEATools::all_stages. eta_pf_colname, eta_fu_colname, eta_pu_colname See PFUAggDatabase::efficiency_cols. year, country See IEATools::iea_cols. quantity, .values See IEATools::template_cols.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/reference/write_agg_etas_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot and write aggregate efficiencies to an Excel file — write_agg_etas_xlsx","text":"TRUE file written successfully.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/news/index.html","id":"pfuaggdatabase-016-2023-12-19","dir":"Changelog","previous_headings":"","what":"PFUAggDatabase 0.1.6 (2023-12-19)","title":"PFUAggDatabase 0.1.6 (2023-12-19)","text":"Cache longer saved. Add statement need README.Rmd file. Add Remotes: field DESCRIPTION assist installation metapackage CLPFUDatabase.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/news/index.html","id":"pfuaggdatabase-015-2023-12-10-doi","dir":"Changelog","previous_headings":"","what":"PFUAggDatabase 0.1.5 (2023-12-10)","title":"PFUAggDatabase 0.1.5 (2023-12-10)","text":"Delete continuous integration workflow. vignettes built GitHub, input data unavailable. Now creating efficiency data frames regular “without NEU” versions PSUT data frame.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/news/index.html","id":"pfuaggdatabase-014-2023-11-27-doi","dir":"Changelog","previous_headings":"","what":"PFUAggDatabase 0.1.4 (2023-11-27)","title":"PFUAggDatabase 0.1.4 (2023-11-27)","text":"Fixed typos README.Rmd README.md stemming earlier name change response JOSS paper review. Specifically, PFUAggWorkflow –> PFUAggDatabase.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/news/index.html","id":"pfuaggdatabase-013-2023-08-19-doi","dir":"Changelog","previous_headings":"","what":"PFUAggDatabase 0.1.3 (2023-08-19)","title":"PFUAggDatabase 0.1.3 (2023-08-19)","text":"Fixed bug U_eiou wasn’t argument list call Recca::finaldemand_aggregates(). Added new vignette shows read data pins make graph country efficiencies coloured continent. New function rename_prime_cols() deletes original matrices renames “*_prime” original names. Used chopping process. Now testing primary, final, useful aggregations equal. nicely formatted error thrown .","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/news/index.html","id":"pfuaggdatabase-012-2023-06-06-doi","dir":"Changelog","previous_headings":"","what":"PFUAggDatabase 0.1.2 (2023-06-06)","title":"PFUAggDatabase 0.1.2 (2023-06-06)","text":"Updated targets store location.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/news/index.html","id":"pfuaggdatabase-011-2022-06-05-doi","dir":"Changelog","previous_headings":"","what":"PFUAggDatabase 0.1.1 (2022-06-05)","title":"PFUAggDatabase 0.1.1 (2022-06-05)","text":"Preparing pipeline execution ARC facilities Leeds University. Rearranged order operations pipeline. Now, chopping happens first. Despecifying aggregating happens . change make upstream downstream swims stable, numerically. Added target .csv pin final--useful efficiencies final demand sectors. Simplified calculation primary, final, useful aggregates. Now parallelizing across combinations countries years. Previously parallelized across countries. Hopefully fixes memory issues. Now includes targets product industry aggregations. Now creates targets vector pins PFUDatabase.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/news/index.html","id":"pfuaggdatabase-010-2022-04-15-doi","dir":"Changelog","previous_headings":"","what":"PFUAggDatabase 0.1.0 (2022-04-15)","title":"PFUAggDatabase 0.1.0 (2022-04-15)","text":"First fully-working version pipeline completes parallel , without intervention restarting. Fixed nasty bug Countries target picked information different environment. Solution wrap countries list(). years defend similar problems. Now using future instead clustermq parallel processing, avoid hangs executing pipeline. Add GitHub actions continuous integration. Add DOI badge Readme.Rmd.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUAggDatabase/news/index.html","id":"pfuaggdatabase-001-2022-04-03-doi","dir":"Changelog","previous_headings":"","what":"PFUAggDatabase 0.0.1 (2022-04-03)","title":"PFUAggDatabase 0.0.1 (2022-04-03)","text":"Now saving important results pinboard. Now saving workflow cache .zip file. Added new years variable allows user-selection years analyzed. Added efficiency calculations target write_agg_etas_xlsx. Added spell-checking build process. Added primary, final, useful energy exergy targets use regional aggregations. Added regional aggregation targets Added NEWS.md file track changes package.","code":""}]
